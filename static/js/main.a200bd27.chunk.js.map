{"version":3,"sources":["store/loadStatus.ts","models/main.ts","store/main/types.ts","store/main/reducer.ts","store/blocks/types.ts","store/blocks/reducer.ts","store/roles/types.ts","store/roles/reducer.ts","text/questions.ts","store/questions/types.ts","store/questions/reducer.js","store/rootReducer.ts","store/blocks/actions.ts","store/main/actions.ts","store/blocks/saga.ts","store/roles/actions.ts","store/roles/saga.ts","store/rootSaga.ts","models/block.ts","models/role.ts","models/question.ts","services/index.ts","services/http.ts","services/api/apiBlock.ts","services/api/apiRole.ts","services/api/apiQuestion.ts","hooks/useCustomSelector.ts","hooks/useCustomDispatch.ts","store/rootSelector.ts","store/main/selectors.ts","components/TestPage/TestPage.tsx","store/questions/actions.ts","text/roles.ts","components/ResultPage/ResultPage.tsx","components/Loading/LoadBlocks.tsx","components/Loading/LoadRoles.tsx","components/Alert/Alert.tsx","components/TechnicalCheckPage/TechnicalCheckPage.tsx","App.tsx","index.tsx"],"names":["loadStatus","initialMain","statusAsync","loadBlocks","notLoaded","loadRoles","loadQuestions","Main","Record","SET_STATUS_ASYNC","reducer","state","action","type","types","set","status","value","LOAD_BLOCKS","LOAD_BLOCKS_SUCCESS","Map","blocks","forEach","block","has","id","LOAD_ROLES","LOAD_ROLES_SUCCESS","roles","role","questions","title","questionLength","length","SET_VALUE","RESET_QUESTIONS","initialState","map","el","_","questionPart","newState","createRootReducer","history","combineReducers","router","connectRouter","main","loadBlocksSuccess","setStatusAsync","loadBlocksAsync","blockSaga","services","call","container","ApiBlock","put","loaded","errorServer","console","error","takeEvery","loadRolesSuccess","loadRolesAsync","roleSaga","ApiRole","Block","Role","name","characteristic","functionality","Question","text","bottle","Bottle","service","get","url","data","request","post","patch","delete","method","fetch","packageJson","body","JSON","stringify","undefined","then","response","ok","json","http","apiBlock","apiRole","apiQuestion","useCustomSelector","selector","arg","useSelector","useCustomDispatch","useDispatch","propsFirstSelector","prop","mainGetStatusAsync","createSelector","blockState","roleState","filter","questionState","result","sumValue","question","reduce","sum","sort","a","b","withStyles","instructionsText","fontSize","lineHeight","violet","color","fontWeight","instruction","display","justifyContent","alignItems","border","backgroundColor","borderRadius","padding","marginTop","overflow","maxHeight","transition","instructionOpened","paddingBottom","instructionClosed","props","useState","blockId","setBlockId","openInfo","setOpenInfo","instrcutionModal","setInstructionModal","classes","questionsRate","dispatch","useEffect","match","params","idBlock","location","currentQuestions","sumValueQuestions","acc","val","possibleMaximumValueQuestion","handleChangeQuestion","setValue","style","Typography","gutterBottom","variant","component","align","marginBottom","className","margin","Bold","Button","size","onClick","FixNameBlock","textTransform","index","WrapperQuestion","WrapperLabel","WrapperWrapperSlider","WrapperSlider","paddingRight","Slider","onChange","event","defaultValue","aria-labelledby","step","min","max","valueLabelDisplay","marks","disabled","WrapperControlPanel","marginRight","textAlign","WrapperTooltipInfo","TooltipInfo","open","ButtonInfo","IconButton","aria-label","InfoIconStyled","to","RouterLink","styled","div","strong","InfoIcon","label","haracteristic","keys","ResultPage","makeStyles","tableContainer","maxWidth","instagramIcon","background","height","boxShadow","useStyles","updatedRoles","pageId","questionId","log","array","push","arrayLength","topRoles","i","rate","pop","category","Object","key","j","mainValue","supportedValue","smallest","sumAllValue","Box","TableContainer","Paper","Table","TableBody","TableRow","TableCell","Gradient2","Math","round","borderTop","borderBottom","flexDirection","fontStyle","window","startIcon","mb","toFixed","href","boxSizing","width","LoadBlocks","LoadRoles","Alert","Wrapper","LoaderStyledIcon","WarningStyledIcon","LoaderIcon","WarningIcon","TechnicalCheckPage","load","Title","TableStyled","valueSeq","table","App","pathname","useLocation","scrollTo","exact","path","TestPage","createHashHistory","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","routerMiddleware","run","rootSaga","all","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a200bd27.chunk.js","sourcesContent":["export enum loadStatus {\n    notLoaded,\n    load,\n    loaded,\n    errorServer,\n}\n","import { Record } from \"immutable\";\nimport { loadStatus } from \"src/store/loadStatus\";\n\nexport interface IMain {\n    statusAsync: { loadBlocks: loadStatus; loadRoles: loadStatus; loadQuestions: loadStatus };\n}\n\nconst initialMain: IMain = {\n    statusAsync: {\n        loadBlocks: loadStatus.notLoaded,\n        loadRoles: loadStatus.notLoaded,\n        loadQuestions: loadStatus.notLoaded,\n    },\n};\n\nexport default class Main extends Record(initialMain) {}\n","export const SET_STATUS_ASYNC = \"SET_STATUS_ASYNC\";\n","import { ActionTypesInfer } from \"src/store/actionTypes\";\nimport Main from \"src/models/main\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\n\nexport type TStoreMain = Main;\n\nconst reducer = (state: TStoreMain = new Main(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.SET_STATUS_ASYNC:\n            return state.set(\"statusAsync\", { ...state.statusAsync, [action.status]: action.value });\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export const LOAD_BLOCKS = \"LOAD_BLOCKS\";\nexport const LOAD_BLOCKS_SUCCESS = \"LOAD_BLOCKS_SUCCESS\";\n","import { Map } from \"immutable\";\nimport { ActionTypesInfer } from \"src/store/actionTypes\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\nimport Block from \"src/models/block\";\n\nexport type TStoreBlock = Map<Block[\"id\"], Block>;\n\nconst reducer = (state: TStoreBlock = Map(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.LOAD_BLOCKS_SUCCESS:\n            action.blocks.forEach((block: Block) => {\n                if (!state.has(block.id)) {\n                    state = state.set(block.id, block);\n                }\n            });\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export const LOAD_ROLES = \"LOAD_ROLES\";\nexport const LOAD_ROLES_SUCCESS = \"LOAD_ROLES_SUCCESS\";\n","import { Map } from \"immutable\";\nimport { ActionTypesInfer } from \"src/store/actionTypes\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\nimport Role from \"src/models/role\";\n\nexport type TStoreRole = Map<Role[\"id\"], Role>;\n\nconst reducer = (state: TStoreRole = Map(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.LOAD_ROLES_SUCCESS:\n            action.roles.forEach((role: Role) => {\n                if (!state.has(role.id)) {\n                    state = state.set(role.id, role);\n                }\n            });\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","const questions = [\r\n    // первая часть\r\n    {\r\n        title: 'КАКОЙ ВКЛАД Я МОГУ ВНЕСТИ В РАБОТУ КОМАНДЫ?',\r\n        questions: [\r\n            'Я думаю, что могу быстро замечать и использовать новые возможности.',\r\n\r\n            'Я легко кооперируюсь с людьми разных типов',\r\n\r\n            'Генерация идей — моё врожденное достоинство',\r\n\r\n            'Моим достоинством является умение находить людей, способных принести пользу команде.',\r\n\r\n            'Мои личные способности – эффективно доводить дело до самого конца',\r\n\r\n            'Я готов перенести временную непопулярность, если вижу, что мои действия принесут полезные результаты.',\r\n\r\n            'Я быстро выясняю, что сработает в данной ситуации, если в подобную ситуацию я уже попадал.',\r\n\r\n            'Личные заблуждения и предубеждения не мешают мне находить и доказывать преимущества альтернативных действий.'\r\n        ]\r\n    },\r\n    // вторая часть\r\n    {\r\n        title: 'МОИ НЕДОСТАТКИ, КОТОРЫЕ МОГУТ ПРОЯВИТЬСЯ В КОМАНДНОЙ РАБОТЕ:',\r\n        questions: [\r\n            'Я чувствую себя неуверенно на совещании, если отсутствуют четкая повестка дня и контроль за её соблюдением.',\r\n\r\n            'Я склонен быть слишком великодушным к людям, имеющим правильную точку зрения, но не высказывающим её открыто.',\r\n\r\n            'Когда группа обсуждает новые идеи, я склонен слишком много говорить',\r\n\r\n            'Вследствие моей осмотрительности я не склонен быстро и с энтузиазмом присоединяться к мнению коллег.',\r\n\r\n            'Когда надо сделать какое-либо дело, некоторые люди считают, что я действую  агрессивно',\r\n\r\n            'Мне трудно повести людей за собой, поскольку я слишком подвержен влиянию атмосферы, царящей в группе.',\r\n\r\n            'Я слишком захвачен идеями, которые мне приходят в голову, и забываю о том, что происходит вокруг',\r\n\r\n            'Мои коллеги находят, что я слишком много внимания уделяю деталям и чрезмерно беспокоюсь о том, что дела идут неправильно.'\r\n        ]\r\n    },\r\n    // третья часть\r\n    {\r\n        title: 'КОГДА Я РАБОТАЮ С ДРУГИМИ НАД ПРОЕКТОМ:',\r\n        questions: [\r\n            'Я умею влиять на людей, не оказывая на них давления.',\r\n\r\n            'Врожденная осмотрительность предохраняет меня от ошибок, возникающих из-за невнимательности.',\r\n\r\n            'Я готов оказать давление, чтобы совещание не превращалось в пустую трату времени и не терялась из виду основная цель обсуждения.',\r\n\r\n            'От меня всегда можно ожидать оригинальные идеи.',\r\n\r\n            'Я всегда готов поддержать хорошее предложение, которое принесет выгоду всем',\r\n\r\n            'Я постоянно ищу среди новых идей и разработок свежайшие.',\r\n\r\n            'Я считаю, что моя способность выносить беспристрастные суждения, могут внести вклад в принятие правильных решений.',\r\n\r\n            'На меня всегда можно возложить обязанности следить за тем, чтобы работа была организована должным образом.'\r\n        ]\r\n    },\r\n    // четвертая часть\r\n    {\r\n        title: 'МОЕ ОТНОШЕНИЕ И ИНТЕРЕС К ГРУППОВОЙ РАБОТЕ:',\r\n        questions: [\r\n            'Я постоянно стараюсь лучше узнать своих коллег.',\r\n\r\n            'Я не боюсь ни оспаривать точку зрения другого человека, ни остаться в  меньшинстве',\r\n\r\n            'Я обычно нахожу вескую аргументацию против плохих предложений.',\r\n\r\n            'Я полагаю, что обладаю талантом быстро организовать исполнение одобренных планов.',\r\n\r\n            'Я обладаю способностью избегать очевидных решений и умею находить неожиданные',\r\n\r\n            'Я стремлюсь добиться совершенства при исполнении любой роли в командной работе.',\r\n\r\n            'Я умею устанавливать контакты с внешним окружением команды.',\r\n\r\n            'Я способен воспринимать любые высказываемые мнения, но без колебаний подчиняюсь мнению большинства после принятия решения.'\r\n        ]\r\n    },\r\n    // пятая часть\r\n    {\r\n        title: 'Я чувствую удовлетворение от работы, потому что:',\r\n        questions: [\r\n            'Мне нравится проводить анализ ситуаций и взвешивать все шансы',\r\n\r\n            'Мне интересно находить практические пути решения проблемы',\r\n\r\n            'Мне приятно осознавать, что я создаю хорошие рабочие взаимоотношения.',\r\n\r\n            'Я способен оказывать сильное влияние на принятие решений.',\r\n\r\n            'Я имею открытые, дружеские отношения с людьми, которые могут предложить  что-то новенькое',\r\n\r\n            'Я могу убеждать людей в необходимости данного курса действий.',\r\n\r\n            'Я чувствую себя в своей стихии, когда могу уделить задаче все мое внимание.',\r\n\r\n            'Я люблю работать с чем-то, что стимулирует мое воображение'\r\n        ]\r\n    },\r\n    // шестая часть\r\n    {\r\n        title: 'Когда задание трудное и незнакомое:',\r\n        questions: [\r\n            'Я обычно сперва обдумываю пути выхода из тупика, прежде чем начать действовать.',\r\n\r\n            'Я был бы готов работать с человеком, указавшим наиболее позитивный подход, каковы бы ни были связанные с этим трудности.',\r\n\r\n            'Я бы попытался найти способ разбиения задачи на части в соответствии с тем, что лучше всего умеют делать отдельные члены команды',\r\n\r\n            'Присущая мне обязательность помогла бы нам не отстать от графика.',\r\n\r\n            'Я надеюсь, мне бы удалось сохранить хладнокровие и способность логически мыслить.',\r\n\r\n            'Я был бы готов действовать силой положительного примера при появлении признаков отсутствия прогресса в командной работе.',\r\n\r\n            'Я готов взять лидерские обязанности на себя, если чувствую, что группа не  прогрессирует',\r\n\r\n            'Я бы начал дискуссию с целью стимулировать появление новых мыслей,  способствующих решению проблемы'\r\n        ]\r\n    },\r\n    // седьмая часть\r\n    {\r\n        title: 'ПРОБЛЕМЫ, С КОТОРЫМИ Я СТАЛКИВАЮСЬ, РАБОТАЯ В КОМАНДЕ:',\r\n        questions: [\r\n            'Я склонен выражать свое нетерпение по отношению к людям, которые стоят на  пути развития прогресса (мешают)',\r\n\r\n            'Окружающие иногда критикуют меня за чрезмерный рационализм и неспособность к интуитивным решениям.',\r\n\r\n            'Мое желание убедиться в том, что работа выполняется с высоким качеством,  может иногда привести к задержке',\r\n\r\n            'Я слишком быстро утрачиваю энтузиазм и стараюсь почерпнуть его у наиболее активных членов группы',\r\n\r\n            'Мне трудно приступить к решению задачи, не имея четкой цели',\r\n\r\n            'Мне иногда бывает очень трудно разобраться во встретившихся мне сложностях.',\r\n\r\n            'Я стесняюсь обратиться за помощью к другим, когда не могу что-либо сделать сам.',\r\n            \r\n            'Я испытываю затруднения при обосновании своей точки зрения, когда сталкиваюсь с серьезными возражениями.'\r\n        ]\r\n    },\r\n];\r\n\r\nconst questionLength = questions.length;\r\n\r\nexport { questions, questionLength };","export const SET_VALUE = \"SET_VALUE\";\nexport const RESET_QUESTIONS = \"RESET_QUESTIONS\";\n","import { questions } from '../../text/questions';\nimport * as types from \"./types\";\n\nconst initialState = {\n    ...questions.map((el) => el.questions.map(_ => 0))\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.SET_VALUE: \n            const questionPart = action.questionPart;\n            const id = action.id;\n            const newState = {\n                ...state\n            };\n            newState[questionPart][id] = action.value\n            return newState;\n        case types.RESET_QUESTIONS:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { History, LocationState } from \"history\";\nimport main, { TStoreMain } from \"src/store/main/reducer\";\nimport blocks, { TStoreBlock } from \"src/store/blocks/reducer\";\nimport roles, { TStoreRole } from \"src/store/roles/reducer\";\nimport questions from \"src/store/questions/reducer\";\n\nexport interface IStore {\n    router: typeof connectRouter;\n    main: TStoreMain;\n    blocks: TStoreBlock;\n    roles: TStoreRole;\n}\n\nconst createRootReducer = (history: History<LocationState>) =>\n    combineReducers({\n        router: connectRouter(history),\n        main,\n        blocks,\n        roles,\n        questions,\n    });\n\nexport default createRootReducer;\n","import * as types from \"./types\";\nimport Block from \"src/models/block\";\n\nexport const loadBlocks = () =>\n    ({\n        type: types.LOAD_BLOCKS,\n    } as const);\n\nexport const loadBlocksSuccess = (blocks: Block[]) =>\n    ({\n        type: types.LOAD_BLOCKS_SUCCESS,\n        blocks,\n    } as const);\n","import * as types from \"./types\";\nimport Main from \"src/models/main\";\nimport { loadStatus } from \"src/store/loadStatus\";\n\nexport const setStatusAsync = (status: keyof Main[\"statusAsync\"], value: loadStatus) =>\n    ({\n        type: types.SET_STATUS_ASYNC,\n        status,\n        value,\n    } as const);\n","import bottle from \"src/services\";\nimport { call, put, takeEvery } from \"@redux-saga/core/effects\";\nimport * as types from \"./types\";\nimport { loadBlocksSuccess } from \"./actions\";\nimport { setStatusAsync } from \"src/store/main/actions\";\nimport { loadStatus } from \"src/store/loadStatus\";\n\nfunction* loadBlocksAsync(services: typeof bottle) {\n    try {\n        const blocks = yield call(services.container.ApiBlock.loadBlocks);\n        yield put(loadBlocksSuccess(blocks));\n        yield put(setStatusAsync(\"loadBlocks\", loadStatus.loaded));\n    } catch (e) {\n        yield put(setStatusAsync(\"loadBlocks\", loadStatus.errorServer));\n        console.error(\"Server error while loading blocks!\");\n        console.error(e);\n    }\n}\n\nexport default function* blockSaga(services: typeof bottle) {\n    yield takeEvery(types.LOAD_BLOCKS, loadBlocksAsync, services);\n}\n","import * as types from \"./types\";\nimport Role from \"src/models/role\";\n\nexport const loadRoles = () =>\n    ({\n        type: types.LOAD_ROLES,\n    } as const);\n\nexport const loadRolesSuccess = (roles: Role[]) =>\n    ({\n        type: types.LOAD_ROLES_SUCCESS,\n        roles,\n    } as const);\n","import bottle from \"src/services\";\nimport { call, put, takeEvery } from \"@redux-saga/core/effects\";\nimport * as types from \"./types\";\nimport { loadRolesSuccess } from \"./actions\";\nimport { setStatusAsync } from \"src/store/main/actions\";\nimport { loadStatus } from \"src/store/loadStatus\";\n\nfunction* loadRolesAsync(services: typeof bottle) {\n    try {\n        const roles = yield call(services.container.ApiRole.loadRoles);\n        yield put(loadRolesSuccess(roles));\n        yield put(setStatusAsync(\"loadRoles\", loadStatus.loaded));\n    } catch (e) {\n        yield put(setStatusAsync(\"loadRoles\", loadStatus.errorServer));\n        console.error(\"Server error while loading roles!\");\n        console.error(e);\n    }\n}\n\nexport default function* roleSaga(services: typeof bottle) {\n    yield takeEvery(types.LOAD_ROLES, loadRolesAsync, services);\n}\n","import { all } from \"redux-saga/effects\";\nimport Bottle from \"bottlejs\";\nimport blockSaga from \"src/store/blocks/saga\";\nimport roleSaga from \"src/store/roles/saga\";\n\nexport default (services: Bottle) => {\n    return function* rootSaga() {\n        yield all([blockSaga(services), roleSaga(services)]);\n    };\n};\n","import { Record } from \"immutable\";\n\nexport interface IBlock {\n    id: number;\n    title: string;\n}\n\nexport const initialBlock: IBlock = {\n    id: 0,\n    title: \"\",\n};\n\nexport default class Block extends Record(initialBlock) {}\n","import { Record } from \"immutable\";\nimport { TStoreRole } from \"src/store/roles/reducer\";\n\nexport interface IRole {\n    id: number;\n    name: string;\n    characteristic: string;\n    functionality: string;\n    value: number;\n}\n\nexport const initialRole: IRole = {\n    id: 0,\n    name: \"\",\n    characteristic: \"\",\n    functionality: \"\",\n    value: 0,\n};\n\nexport const sortValue = (roles: Readonly<TStoreRole>) => {\n    return roles.sort((a: Role, b: Role) => {\n        if (a.value < b.value) return 1;\n        if (a.value > b.value) return -1;\n        return 0;\n    });\n};\n\nexport default class Role extends Record(initialRole) {}\n","import { Record } from \"immutable\";\n\nexport interface IQuestion {\n    id: number;\n    block: number;\n    role: number;\n    text: string;\n    value: number;\n}\n\nexport const initialQuestion: IQuestion = {\n    id: 0,\n    block: 0,\n    role: 0,\n    text: \"\",\n    value: 0,\n};\n\nexport default class Question extends Record(initialQuestion) {}\n","import Bottle from \"bottlejs\";\nimport Http from \"./http\";\nimport ApiBlock from \"./api/apiBlock\";\nimport ApiRole from \"./api/apiRole\";\nimport ApiQuestion from \"./api/apiQuestion\";\n\nlet bottle = new Bottle();\n\nexport default bottle;\nbottle.service(\"Http\", Http);\nbottle.service(\"ApiBlock\", ApiBlock, \"Http\");\nbottle.service(\"ApiRole\", ApiRole, \"Http\");\nbottle.service(\"ApiQuestion\", ApiQuestion, \"Http\");\n\ndeclare module \"bottlejs\" {\n    interface IContainer {\n        ApiBlock: ApiBlock;\n        ApiRole: ApiRole;\n        ApiQuestion: ApiQuestion;\n    }\n}\n","import { IHttp } from \"./IHttp\";\nimport * as packageJson from \"../../package.json\";\n\nexport default class Http implements IHttp {\n    get = (url: string, data?: object) => {\n        return this.request(\"GET\", url, data);\n    };\n\n    post = (url: string, data?: object) => {\n        return this.request(\"POST\", url, data);\n    };\n\n    put = (url: string, data?: object) => {\n        return this.request(\"PUT\", url, data);\n    };\n\n    patch = (url: string, data?: object) => {\n        return this.request(\"PATCH\", url, data);\n    };\n\n    delete = (url: string, data?: object) => {\n        return this.request(\"DELETE\", url, data);\n    };\n\n    request = (method: \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\" = \"GET\", url: string, data?: {}) => {\n        return fetch(packageJson.homepage + \"/api\" + url, {\n            method,\n            body: method !== \"GET\" ? JSON.stringify(data) : undefined,\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw response;\n            }\n        });\n    };\n}\n","import { IHttp } from \"src/services/IHttp\";\nimport Block from \"src/models/block\";\n\nexport interface IReadApiBlock {\n    id: number;\n    title: string;\n}\n\nexport default class ApiBlock {\n    constructor(private http: IHttp, private url: string = \"/blocks.json\") {}\n\n    loadBlocks = () => {\n        return this.http.get(this.url).then((response: IReadApiBlock[]) => {\n            return response.map((apiBlock) => new Block(apiBlock));\n        });\n    };\n}\n","import { IHttp } from \"src/services/IHttp\";\nimport Role from \"src/models/role\";\n\nexport interface IReadApiRole {\n    id: number;\n    name: string;\n    characteristic: string;\n    functionality: string;\n}\n\nexport default class ApiRole {\n    constructor(private http: IHttp, private url: string = \"/roles.json\") {}\n\n    loadRoles = () => {\n        return this.http.get(this.url).then((response: IReadApiRole[]) => {\n            return response.map((apiRole) => new Role(apiRole));\n        });\n    };\n}\n","import { IHttp } from \"src/services/IHttp\";\nimport Question from \"src/models/question\";\n\nexport interface IReadApiQuestion {\n    id: number;\n    block: number;\n    role: number;\n    text: string;\n}\n\nexport default class ApiQuestion {\n    constructor(private http: IHttp, private url: string = \"/questions.json\") {}\n\n    loadQuestions = () => {\n        return this.http.get(this.url).then((response: IReadApiQuestion[]) => {\n            return response.map((apiQuestion) => new Question(apiQuestion));\n        });\n    };\n}\n","import { useSelector } from \"react-redux\";\nimport { IStore } from \"src/store/rootReducer\";\nimport * as rootSelector from \"src/store/rootSelector\";\n\ntype InferSelectorFunctionsTypes<T> = T extends { [key: string]: infer U } ? U : never;\n\ntype InferredTypes = InferSelectorFunctionsTypes<typeof rootSelector>;\n\nexport default function useCustomSelector<T extends InferredTypes>(selector: T, arg?: number | string) {\n    //@ts-ignore\n    return useSelector((state: IStore) => selector(state, arg) as ReturnType<T>);\n}\n","import { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { allActionsTypes } from \"src/store/actionTypes\";\n\nexport default function useCustomDispatch() {\n    return useDispatch<Dispatch<allActionsTypes>>();\n}\n","import { createSelector } from \"reselect\";\nimport { Map } from \"immutable\";\nimport { IStore } from \"src/store/rootReducer\";\nimport { getStatusAsync } from \"src/store/main/selectors\";\nimport Role, { sortValue } from \"src/models/role\";\nimport { TStoreRole } from \"./roles/reducer\";\n\nconst propsFirstSelector = (_: IStore, prop: any) => prop;\n\nexport const mainState = (state: Readonly<IStore>) => state.main;\nexport const mainGetStatusAsync = createSelector(mainState, getStatusAsync);\n\nexport const blockState = (state: Readonly<IStore>) => state.blocks;\nexport const blockGetBlockById = createSelector(blockState, propsFirstSelector, (blocks, id) => {\n    return blocks.filter((block) => block.id === id);\n});\n\nexport const roleState = (state: any) => state.roles;\nexport const rolesGetRoleCalculatedValue = (state: any): TStoreRole => {\n    let result: TStoreRole = Map<Role[\"id\"], Role>();\n    state.roles.forEach((role: any) => {\n        let sumValue = state.questions\n            .filter((question: any) => question.role === role.id)\n            .reduce((sum: any, question: any) => sum + question.value, 0);\n\n        result = result.set(role.id, role.set(\"value\", sumValue));\n    });\n\n    return result;\n};\nexport const rolesGetRoleCalculatedValueSort = createSelector(rolesGetRoleCalculatedValue, sortValue);\n\nexport const questionState = (state: any) => state.questions;\nexport const questionsGetQuestionByBlock = createSelector(questionState, propsFirstSelector, (questions, id) => {\n    return questions.filter((question: any) => question.block === id);\n});\n","import { TStoreMain } from \"./reducer\";\n\nexport const getStatusAsync = (state: TStoreMain) => state.statusAsync;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport useCustomDispatch from 'src/hooks/useCustomDispatch';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { QuestionCircle as InfoIcon } from \"@styled-icons/bootstrap/QuestionCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport { questions, questionLength } from '../../text/questions';\nimport { questionState } from 'src/store/rootSelector';\nimport { setValue } from 'src/store/questions/actions';\n\nconst useStyles = {\n    instructionsText: {\n        fontSize: \"1em\",\n        lineHeight: 1.1,\n    },\n    violet: {\n        \"& .MuiSlider-markLabelActive\": {\n            color: '#25006e',\n            fontWeight: '700'\n        }\n    },\n    instruction: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        border: '2px solid #3c0068',\n        backgroundColor: '#fffacd',\n        borderRadius: '15px',\n        padding: '0',\n        marginTop: '5px',\n        overflow: 'hidden',\n        maxHeight: 'auto',\n        transition: 'max-height 2s, padding 0.5s, border 0.5s'\n    },\n    instructionOpened: {\n        maxHeight: 'auto',\n        border: '2px solid #3c0068',\n        padding: '10px',\n        paddingBottom: '8px',\n    },\n    instructionClosed: {\n       maxHeight: '0',\n       padding: '0',\n       border: 'none'\n    }\n};\n\nfunction TestPage( props: any ) {\n\n    const [ blockId, setBlockId ] = useState(0);\n    const [openInfo, setOpenInfo] = useState(false);\n    const [ instrcutionModal, setInstructionModal ] = useState(false);\n\n    const { classes } = props;\n\n    const questionsRate = useCustomSelector(questionState);\n    const dispatch = useCustomDispatch();\n\n    useEffect(() => {\n        const blockId = props.match.params.idBlock;\n        setBlockId(blockId - 1);\n    });\n\n    useEffect(() => {\n        setInstructionModal(false);\n    }, [props.location])\n\n    const currentQuestions = questions[blockId];\n    const sumValueQuestions = questionsRate[blockId].reduce((acc: any, val: any) => acc + val, 0);\n    const possibleMaximumValueQuestion = 10 - sumValueQuestions;\n\n    const handleChangeQuestion = (value: any, id: any) => {\n            dispatch(setValue(id, blockId, value)); \n    };\n\n        return (\n            <>\n            <div style={{ padding: '1em 1em 2.1em 1em'}}>\n                {blockId === 0 && \n                <Typography \n                gutterBottom \n                variant={\"h5\"} \n                component={\"h1\"} \n                align={'center'} style={{\n                    marginBottom: '20px'\n                }}>\n                    Тест Белбина на вашу роль в команде\n                </Typography>}\n\n                {blockId === 0 &&\n                    <Typography \n                    gutterBottom \n                    className={classes.instructionsText} \n                    style={{fontSize: '14px', lineHeight: '20px', margin: '0'}}>\n                    <Bold>Инструкция.</Bold> В каждой из семи частей данного теста распределите 10 баллов между 8-мью утверждениями. Если вы согласны с каким-либо утверждением на все 100%, вы можете отдать ему все 10 баллов. По результатам прохождения теста будет определена ваша роль в команде.\n                </Typography>}\n                <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n                    <Typography \n                    gutterBottom \n                    variant={\"h6\"} \n                    component={\"h2\"} \n                    style={{ margin: '0' }}>\n                        Часть { blockId + 1 } из { questionLength }\n                    </Typography>\n                    {blockId !== 0 && \n                    <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={() => setInstructionModal(!instrcutionModal)}\n                    >\n                        Инструкция\n                    </Button>}\n                </div>\n                <div className={\n                    instrcutionModal ? classes.instruction + ' ' + classes.instructionOpened\n                                    : classes.instruction + ' ' + classes.instructionClosed }> \n                    <Typography \n                    gutterBottom \n                    className={classes.instructionsText} \n                    style={{fontSize: '14px', lineHeight: '20px'}}>\n                        <Bold>Инструкция.</Bold> В каждой из семи частей данного теста распределите 10 баллов между 8-мью утверждениями. Если вы согласны с каким-либо утверждением на все 100%, вы можете отдать ему все 10 баллов. По результатам прохождения теста будет определена ваша роль в команде.\n                    </Typography>\n                </div>\n\n                <FixNameBlock>\n                    <Typography variant={\"h6\"} component={\"h2\"} style={{ textTransform: 'uppercase'}}>\n                        <Bold>{currentQuestions.title}</Bold>\n                    </Typography>\n                </FixNameBlock>\n\n                {currentQuestions.questions.map((question: any, index: any) => (\n                    <WrapperQuestion key={index}>\n                        <WrapperLabel>\n                            <Typography id={\"slider-question-\" + index} gutterBottom>\n                                {index + 1}.  {question}\n                            </Typography>\n                        </WrapperLabel>\n                        <WrapperWrapperSlider>\n                            <WrapperSlider paddingRight={(questionsRate[blockId][index] + possibleMaximumValueQuestion) * 10}>\n                                <Slider\n                                    onChange={(event, value) =>\n                                        handleChangeQuestion(value, index)\n                                    }\n                                    value={questionsRate[blockId][index]}\n                                    defaultValue={0}\n                                    aria-labelledby=\"discrete-slider-restrict\"\n                                    step={1}\n                                    min={0}\n                                    max={\n                                        questionsRate[blockId][index] + possibleMaximumValueQuestion === 0\n                                            ? 1\n                                            : questionsRate[blockId][index] + possibleMaximumValueQuestion\n                                    }\n                                    valueLabelDisplay=\"auto\"\n                                    marks={marks}\n                                    className={classes.violet}\n                                    disabled={questionsRate[blockId][index] + possibleMaximumValueQuestion === 0}\n                                />\n                            </WrapperSlider>\n                        </WrapperWrapperSlider>\n                    </WrapperQuestion>\n                ))}\n            </div>\n            <WrapperControlPanel>\n            {possibleMaximumValueQuestion !== 0 && \n            <>\n                <p style={{ marginRight: '2%', textAlign: 'center'}}> \n                    {possibleMaximumValueQuestion === 1 ? 'Остался ' : 'Осталось '}\n                    {possibleMaximumValueQuestion} \n                    {possibleMaximumValueQuestion >= 5 ? ' баллов ' :\n                    (possibleMaximumValueQuestion > 1 ? ' балла ' : ' балл ') } \n                    из 10 \n                </p> \n                <WrapperTooltipInfo>\n                    <TooltipInfo open={openInfo}>\n                        <Typography>\n                            Нужно распределить <b>{possibleMaximumValueQuestion}</b> из 10 баллов для продолжение\n                            теста\n                        </Typography>\n                        <ButtonInfo onClick={() => setOpenInfo(false)}>Понятно</ButtonInfo>\n                    </TooltipInfo>\n                    <IconButton aria-label=\"info\" onClick={() => setOpenInfo(true)}>\n                        <InfoIconStyled size=\"20\" />\n                    </IconButton>\n                </WrapperTooltipInfo>\n            </>}\n\n                {blockId + 1 < questionLength && (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        to={\"/block/\" + (blockId + 2)}\n                        component={RouterLink}\n                        disabled={sumValueQuestions < 10}\n                    >\n                        Далее\n                    </Button>\n                )}\n\n                {blockId + 1 === questionLength && (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        to=\"/test_result\"\n                        component={RouterLink}\n                        disabled={sumValueQuestions < 10}\n                    >\n                        Результат\n                    </Button>\n                )}\n            </WrapperControlPanel>\n            </>\n        );\n}\n\nexport default withStyles(useStyles)(TestPage);\n\n\nconst WrapperQuestion = styled.div`\n`;\n\nconst WrapperWrapperSlider = styled.div`\n    padding: 0 2em;\n`;\n\nconst WrapperSlider = styled.div`\n    width: ${(props: { paddingRight: number }) => (props.paddingRight > 0 ? props.paddingRight : 10)}%;\n    display: flex;\n    user-select: none;\n`;\n\nconst WrapperLabel = styled.div`\n    user-select: none;\n`;\n\nconst Bold = styled.strong`\n    font-weight: bold;\n`;\n\nconst FixNameBlock = styled.div`\n    position: sticky;\n    top: 0;\n    font-size: 1.25em;\n    padding: 8px 0;\n    min-height: 2em;\n    z-index: 10000;\n    background-color: #fff;\n    border-bottom: 2.5px solid #3c0068;\n`;\n\nconst WrapperControlPanel = styled.div`\n    display: flex;\n    flex-direction: row;\n    position: fixed;\n    bottom: 0;\n    justify-content: center;\n    align-items: center;\n    padding: 1em 0;\n    width: 100%;\n    z-index: 10000;\n    max-width: 935px;\n    background-color: #fff;\n    border-top: 2.5px solid #3c0068;\n\n    @media screen and (max-width: 400px) {\n        display: flex;\n        flex-direction: column !important;\n    }\n`;\n\nconst InfoIconStyled = styled(InfoIcon)`\n    color: #3f51b5;\n`;\n\nconst WrapperTooltipInfo = styled.div`\n    position: relative;\n    display: inline-block;\n`;\n\nconst TooltipInfo = styled.div`\n    visibility: ${(props: { open: boolean }) => (props.open ? \"visible\" : \"hidden\")};\n    width: 240px;\n    background-color: #1c1c1c;\n    color: #ccc;\n    text-align: center;\n    padding: 5px;\n    border-radius: 3px;\n\n    bottom: 100%;\n    left: 50%;\n    margin-left: -120px;\n    position: absolute;\n    z-index: 1;\n`;\n\nconst ButtonInfo = styled.div`\n    cursor: pointer;\n    background-color: #fff;\n    color: #242424;\n    padding: 0.5em;\n    margin: 0.5em;\n    border: 1px solid #ccc;\n    border-radius: 1px;\n`;\n\nconst marks = [\n    { value: 0, label: \"0\" },\n    { value: 1, label: \"1\" },\n    { value: 2, label: \"2\" },\n    { value: 3, label: \"3\" },\n    { value: 4, label: \"4\" },\n    { value: 5, label: \"5\" },\n    { value: 6, label: \"6\" },\n    { value: 7, label: \"7\" },\n    { value: 8, label: \"8\" },\n    { value: 9, label: \"9\" },\n    { value: 10, label: \"10\" },\n];\n","import * as types from \"./types\";\n\nexport const setValue = (id: number, questionPart: number, value: number) =>\n    ({\n        type: types.SET_VALUE,\n        id,\n        questionPart,\n        value,\n    } as const);\n\nexport const resetQuestions = () => ({\n    type: types.RESET_QUESTIONS\n} as const);\n","const roles: any = {\r\n\r\n    'Доводчик': {\r\n        haracteristic: 'Характеристика. Доводчикам присущи практический здравый смысл и хорошее чувство самоконтроля и дисциплины. Они любят тяжелую работу и преодоление проблем в системном режиме. В большей степени Реализаторы являются типичными личностями, чья верность и интерес совпадают с ценностями компании. Они менее сконцентрированы на преследовании собственных интересов. Тем не менее им может не хватать спонтанности, и они могут проявлять жесткость и непреклонность.',\r\n\r\n        functionality: 'Функциональность. Они очень полезны компании благодаря своей надежности и прилежанию. Они добиваются успеха, потому что очень работоспособны и могут четко определить то, что выполнимо и имеет отношение к делу. Говорят, что многие исполнители делают ту работу, которую хотят делать и пренебрегают заданиями, которые находят неприятными. Реализаторы часто продвигаются до высоких должностных позиций в управлении благодаря своим хорошим организаторским способностями и компетентности в решении всех важных вопросов.'\r\n\r\n    },\r\n\r\n    'Председатель': {\r\n\r\n        haracteristic: 'Характеристика. Отличительной чертой Председателей является способность заставлять других работать над распределенными целями. Зрелый, опытный, уверенный, Координатор охотно раздает поручения. В межличностных отношениях они быстро раскрывают индивидуальные наклонности и таланты и мудро их используют для достижения целей команды. Они не обязательно самые умные члены команды, это люди с большим кругозором и опытом, пользующиеся общим уважением команды.',\r\n\r\n        functionality: 'Функциональность. Они хорошо себя проявляют, находясь во главе команды людей с различными навыками и характерами. Они лучше работают совместно с коллегами равными по рангу или позиции, чем с сотрудниками более низких уровней. Их девизом может быть «консультация с контролем». Они верят, что проблему можно решить мирным путем. В некоторых компаниях Координаторы могут вступать в конфликты из-за разности во взглядах с Творцами.'\r\n\r\n    },\r\n\r\n    'Формирователь': {\r\n\r\n        haracteristic: 'Характеристика. Это люди с высоким уровнем мотивации, неисчерпаемой энергией и великой жаждой достижений. Обычно это ярко выраженные экстраверты, обладающие сильной напористостью. Им нравится вести других и подталкивать к действиям. Если возникают препятствия, они быстро находят обходные пути. Своевольные и упрямые, уверенные и напористые, они имеют склонность эмоционально отвечать на любую форму разочарования или крушения планов. Целеустремленные, любящие поспорить. Но им часто не хватает простого человеческого понимания. Их роль самая конкурентная в команде.',\r\n\r\n        functionality: 'Функциональность. Они обычно становятся хорошими руководителями благодаря тому, что умеют генерировать действия и успешно работать под давлением. Они умеют легко воодушевлять команду и очень полезны в группах с разными взглядами, так как способны укротить страсти. Творцы способны парить над проблемами такого рода, продолжая лидировать, не считаясь с ними. Они могут легко провести необходимые изменения и не отказываются от нестандартных решений. Отвечая названию, они пытаются навязывать группе некоторые образцы или формы поведения и деятельности. Они являются самыми эффективными членами команды, способными гарантировать позитивные действия.'\r\n\r\n    },\r\n\r\n    'Мыслитель': {\r\n\r\n        haracteristic: 'Характеристика. Мыслители являются инноваторами и изобретателями, могут быть очень креативными. Они сеют зерно и идеи, из которых прорастают большинство разработок и проектов. Обычно они предпочитают работать самостоятельно, отделившись от других членов команды, используя свое воображение и часто следуя нетрадиционным путем. Имеют склонность быть интровертами, сильно реагируют как на критику, так и на похвалу. Часто из идеи имеют радикальный характер, и им не хватает практических усилий. Они независимы, умны и оригинальны, но могут быть слабыми в общении с людьми другого уровня или направления.',\r\n\r\n        functionality: 'Функциональность. Основная функция Мыслителей – создание новых предложений и решение сложных комплексных проблем. Они очень необходимы на начальных стадиях проектов или когда проект находится под угрозой срыва. Они обычно являются основателями компаний или организаторами новых производств. Тем не менее большое количество Генераторов идей в одной компании может привести к контрпродуктивности, так как они имеют тенденцию проводить время, укрепляя собственные идеи и вступая друг с другом в конфликт.'\r\n    },\r\n\r\n    'Разведчик': {\r\n\r\n        haracteristic: 'Характеристика. Разведчики – часто энтузиасты и яркие экстраверты. Они умеют общаться с людьми в компании и за ее пределами. Они рождены для ведения переговоров, исследования новых возможностей и налаживания контактов. Хотя и не являясь генераторами гениальных идей, они очень легко подхватывают идеи других и развивают их. Они очень легко распознают, что есть в наличии и что еще можно сделать. Их обычно очень тепло принимают в команде благодаря их открытой натуре. Они всегда открыты и любознательны, готовы найти возможности во всем новом. Но, если они не стимулируются другими, их энтузиазм быстро снижается.',\r\n\r\n        functionality: 'Функциональность. Они очень хорошо реагируют и отвечают на новые идеи и разработки, могут найти ресурсы и вне группы. Они самые подходящие люди для установки внешних контактов и проведения последующих переговоров. Они умеют самостоятельно думать, получая информацию от других.'\r\n    },\r\n    \"Оценщик\": {\r\n\r\n        haracteristic: 'Характеристика. Это очень серьезные и предусмотрительные люди с врожденным иммунитетом против чрезмерного энтузиазма. Медлительны в принятии решения, предпочитают хорошо все обдумать. Они способны критически мыслить. Они умеют быть проницательными в суждениях, принимая во внимание все факторы. Эксперты редко ошибаются.',\r\n\r\n        functionality: 'Функциональность. Оценщики наиболее подходят для анализа проблем и оценки идей и предложений. Они хорошо умеют взвешивать все «за» и «против» предложенных вариантов. По сравнению с другими Эксперты кажутся черствыми, занудными и чрезмерно критичными. Некоторые удивляются, как им удается стать руководителями. Тем не менее многие эксперты занимают стратегические посты и преуспевают на должностях высшего ранга. Очень редко удача или срыв дела зависит от принятия спешных решений. Это идеальная «сфера» для Экспертов, людей, которые редко ошибаются и в конце концов выигрывают.'\r\n\r\n    },\r\n    \"Коллективист\": {\r\n\r\n        haracteristic: 'Характеристика. Это люди, пользующиеся наибольшей поддержкой команды. Они очень вежливы, обходительны и общительны. Они умеют быть гибкими и адаптироваться к любой ситуации и разным людям. Дипломаты очень дипломатичны и восприимчивы. Они умеют слушать других и сопереживать, очень популярны в команде. В работе они полагаются на чувствительность, но могут столкнуться с трудностью при принятии решений в срочных и неотложных ситуациях.',\r\n\r\n        functionality: 'Функциональность. Роль Коллективистов состоит в предотвращении межличностных проблем, появляющихся в команде, и поэтому это позволяет эффективно работать всем ее членам. Избегая трений, они будут идти длинной дорогой ради того, чтобы обойти их стороной. Они не часто становятся руководителями, тем более если их непосредственный начальник подчиняется Творцу. Это создает климат, в котором дипломатия и восприимчивость людей этого типа является настоящей находкой для команды, особенно при управленческом стиле, где конфликты могут возникать и должны искусственно пресекаться. Такие люди в качестве руководителя не представляют угрозу ни для кого и поэтому всегда желанны для подчиненных. Дипломаты служат своего рода «смазкой» для команды, а люди в такой обстановке сотрудничают лучше.'\r\n\r\n    },\r\n    \"Исполнитель\": {\r\n\r\n        haracteristic: 'Характеристика. Обладают огромной способностью доводить дело до завершения и обращать внимание на детали. Они никогда не начинают то, что не могут довести до конца. Они мотивируются внутренним беспокойством, хотя часто внешне выглядят спокойными и невозмутимыми. Представители этого типа часто являются интровертами. Им обычно не требуется стимулирование извне или побуждения. Они не терпят случайностей. Не склонны к делегированию, предпочитают выполнять задания самостоятельно.',\r\n\r\n        functionality: 'Функциональность. Являются незаменимыми в ситуациях, когда задания требуют сильной концентрированности и высокого уровня аккуратности. Они несут чувство срочности и неотложности в команду и хорошо проводят различные митинги. Хорошо справляются с управлением благодаря своему стремлению к высшим стандартам, своей аккуратности, точности, вниманию к деталям и умению завершать начатое дело.'\r\n\r\n    }\r\n};\r\n\r\n// первая цифра - номер страницы( начинаються с 0),\r\n// вотрая цира - номер вопроса ( начинаються с 0)\r\nconst keys: any = {\r\n    'Доводчик': [\r\n        '06',\r\n        '10',\r\n        '27',\r\n        '33',\r\n        '41',\r\n        '55',\r\n        '64'\r\n    ],\r\n    'Председатель': [\r\n        '03',\r\n        '11',\r\n        '20',\r\n        '37',\r\n        '45',\r\n        '52',\r\n        '66'\r\n    ],\r\n    'Формирователь': [\r\n        '05',\r\n        '14',\r\n        '22',\r\n        '31',\r\n        '43',\r\n        '56',\r\n        '60'\r\n    ],\r\n    'Мыслитель': [\r\n        '02',\r\n        '16',\r\n        '23',\r\n        '34',\r\n        '47',\r\n        '50',\r\n        '65'\r\n    ],\r\n    'Разведчик': [\r\n        '00',\r\n        '12',\r\n        '25',\r\n        '36',\r\n        '44',\r\n        '57',\r\n        '63'\r\n    ],\r\n    'Оценщик': [\r\n        '07',\r\n        '13',\r\n        '26',\r\n        '32',\r\n        '40',\r\n        '54',\r\n        '61'\r\n    ],\r\n    'Коллективист': [\r\n        '01',\r\n        '15',\r\n        '24',\r\n        '30',\r\n        '42',\r\n        '51',\r\n        '67'\r\n    ],\r\n    'Исполнитель': [\r\n        '04',\r\n        '17',\r\n        '21',\r\n        '35',\r\n        '46',\r\n        '53',\r\n        '62'\r\n    ]\r\n}\r\n\r\nexport { roles, keys };","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { questionState } from 'src/store/rootSelector';\nimport useCustomDispatch from 'src/hooks/useCustomDispatch';\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Box from \"@material-ui/core/Box\";\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport * as packageJson from \"../../../package.json\";\n\nimport { roles, keys } from '../../text/roles';\nimport { resetQuestions } from 'src/store/questions/actions';\n\nexport default function ResultPage() {\n\n\n    const questionsRate = useCustomSelector(questionState);\n    const dispatch = useCustomDispatch();\n\n    const useStyles = makeStyles({\n        tableContainer: {\n            maxWidth: 450,\n            marginBottom: \"1em\",\n        },\n        instagramIcon: {\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n            borderRadius: 3,\n            border: 0,\n            color: 'white',\n            height: 48,\n            padding: '0 30px',\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n            fontWeight: 700,\n            marginTop: '10px'\n          },\n    });\n\n    const classes = useStyles();\n\n    // формируем сколько очков набрала каждая категория\n    let updatedRoles: any = {\n        ...roles\n    };\n    for(const role in updatedRoles) {\n       updatedRoles[role] = keys[role].reduce((acc: any, val: any) => {\n        const pageId = val[0];\n        const questionId = val[1];\n            return acc + questionsRate[pageId][questionId];\n       }, 0);\n    };\n    console.log(updatedRoles);\n\n    // ищем топ всех ролей\n    let array = [];\n    for( const role in updatedRoles ) {\n        array.push(updatedRoles[role]);\n    }\n    array = array.sort((a, b) => a - b);\n\n    const arrayLength = array.length;\n\n    let topRoles = [];\n    for (let i = 0; i < arrayLength; i++) {\n        const rate: any = array.pop();\n        const category = Object.keys(updatedRoles).filter(function(key) {return updatedRoles[key] === rate});\n        for (let j = 0 ; j <= category.length; j++ ) {\n            topRoles.push({\n                category: category[j],\n                rate: rate\n            });\n            updatedRoles[category[i]] = -100;\n            array = array.filter(el => el !== rate);\n        }\n    }\n    for(const role in topRoles) {\n        if (topRoles[role].category === undefined || topRoles[role].rate === undefined ) {\n          delete topRoles[role];\n        }\n    }\n\n    const sumAllValue = topRoles.reduce((sum: any, role: any) => sum + role.rate, 0);\n    if (sumAllValue < 70) {\n        return (\n            <Redirect to=\"/\" />\n        );  \n    }\n\n    // main value\n    let mainValue: any;\n    for(let value in topRoles) {\n        if ( topRoles[value].category !== undefined && topRoles[value].rate !== undefined && value !== undefined) {\n            mainValue = topRoles[value];\n            break;\n        }\n    }\n    // supported value\n    let supportedValue: any;\n    if (mainValue !== undefined) {\n        for(let value in topRoles) {\n            if ( topRoles[value].category !== undefined && topRoles[value].rate !== undefined && value !== undefined && topRoles[value].category !== mainValue.category) {\n                supportedValue = topRoles[value];\n                break;\n            }\n        }\n    }\n    // the smallest value\n    let smallest;\n    for(let value in topRoles) {\n        if ( topRoles[value].category !== undefined && topRoles[value].rate !== undefined && value !== undefined) {\n            smallest = topRoles[value];\n        }\n    }\n\n\n        return (\n            <>\n            <Box style={{ padding: '1em', paddingBottom: '4em'}}>\n                <Typography gutterBottom variant={\"h4\"} component={\"h2\"} style={{textAlign: 'center'}}>\n                    Результат теста\n                </Typography>\n\n                <TableContainer component={Paper} className={classes.tableContainer}>\n                    <Table size=\"small\">\n                        <TableBody>\n                            {topRoles.map((role, index) => (\n                                <TableRow key={\"role\" + index}>\n                                    <TableCell>\n                                        {role.category === mainValue.category &&\n                                        (<Gradient2>\n                                            {role.category}\n                                        </Gradient2>)\n                                        }\n                                        {role.category === supportedValue.category &&\n                                        (<Gradient2>\n                                            {role.category}\n                                        </Gradient2>)\n                                        }\n                                        {role.category !== supportedValue.category && role.category !== mainValue.category && \n                                        role.category\n                                        }\n                                        </TableCell>\n                                    <TableCell \n                                    align=\"right\">\n                                        {role.category === mainValue.category &&\n                                        <Gradient2>\n                                            {Math.round((role.rate * 100) / sumAllValue)}%\n                                        </Gradient2>\n                                        }\n                                        {role.category === supportedValue.category &&\n                                        <Gradient2>\n                                            {Math.round((role.rate * 100) / sumAllValue)}%\n                                        </Gradient2>\n                                        }\n                                        {role.category !== supportedValue.category && role.category !== mainValue.category &&\n                                        Math.round((role.rate * 100) / sumAllValue) + '%'\n                                        }\n                                    </TableCell>\n                                    <TableCell \n                                    align=\"right\">\n                                        {role.category === mainValue.category &&\n                                        <Gradient2>\n                                            {role.rate} (б)\n                                        </Gradient2>}\n                                        {role.category === supportedValue.category &&\n                                        <Gradient2>\n                                            {role.rate} (б)\n                                        </Gradient2>}\n                                        {role.category !== supportedValue.category && role.category !== mainValue.category &&\n                                        role.rate + '(б)'}\n                                        </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                \n                <div style={{ \n                    borderTop: '2.5px solid #3c0068', \n                    borderBottom: '2.5px solid #3c0068',\n                    margin: '20px 0',\n                    padding: '10px 0',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center'\n                    }}>\n                    <p style={{\n                        fontStyle: 'italic',\n                        fontSize: '15px',\n                        fontWeight: 'normal',\n                        lineHeight: '1.3',\n                        maxWidth: '500px',\n                        textAlign: 'center'\n                    }}>\n                        Вот результаты теста, дальше как с этим взаимодействовать, получи инструкцию в личных сообщениях от Яна. Делай скриншот, выкладывай у себя в сторис в Инстаграм, отмечай Яна <Bold>@yanpalm</Bold> и получи короткую консультацию.\n                    </p>\n                        <Button\n                        onClick={() => window.open('https://www.instagram.com/', '_blank')}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        size=\"medium\"\n                        style={{fontSize: '13px'}}\n                        className={classes.instagramIcon}\n                        startIcon={<InstagramIcon />}\n                        >\n                            Поделиться\n                        </Button>\n                </div>\n\n                <Box mb={\"1em\"}>\n                    <Typography gutterBottom variant={\"h4\"} component={\"h3\"} style={{textAlign: 'center'}}>\n                        Интерпретация результата\n                    </Typography>\n\n                        {mainValue !== undefined &&\n                        <Box mb={\"1em\"}>\n                            <Typography gutterBottom variant={\"h5\"} component={\"h3\"}>\n                                Лучшая роль - {mainValue.category} / {(mainValue.rate / sumAllValue * 100).toFixed(0)}%\n                            </Typography>\n                            <Typography gutterBottom>\n                                Наивысший балл по командной роли показывает, что Вы можете можете лучше всего исполнять\n                                роль <Bold>{mainValue.category}</Bold> в управленческой команде.\n                            </Typography>\n                            <Typography gutterBottom>{roles[mainValue.category].haracteristic}</Typography>\n                            <Typography gutterBottom>{roles[mainValue.category].functionality}</Typography>\n                        </Box>}\n\n\n                        {supportedValue !== undefined && \n                        <Box mb={\"1em\"}>\n                            <Typography gutterBottom variant={\"h5\"} component={\"h3\"}>\n                                Поддерживающая роль - {supportedValue.category} / {(supportedValue.rate / sumAllValue * 100).toFixed(0)}%\n                            </Typography>\n                            <Typography>\n                                Поддерживающую роль, на которую Вы можете переключиться, если Ваша основная командная\n                                роль по каким-либо причинам не нужна группе - <Bold>{supportedValue.category}</Bold>\n                            </Typography>\n                            <Typography gutterBottom>Характеристика. {roles[supportedValue.category].haracteristic}</Typography>\n                            <Typography gutterBottom>Функциональность. {roles[supportedValue.category].functionality}</Typography>\n                        </Box>}\n                        {\n                        smallest !== undefined &&\n                        <Box mb={\"1em\"}>\n                            <Typography gutterBottom variant={\"h5\"} component={\"h3\"}>\n                                Слабое место - {smallest.category} / {(smallest.rate / sumAllValue * 100).toFixed(0)}%\n                            </Typography>\n                            <Typography gutterBottom>\n                                Ваше слабое место - <Bold>{smallest.category}</Bold>\n                            </Typography>\n                            <Typography gutterBottom>Характеристика. {roles[smallest.category].haracteristic}</Typography>\n                            <Typography gutterBottom>Функциональность. {roles[smallest.category].functionality}</Typography>\n                        </Box>\n                        }\n                        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '40px' }}>\n                            <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                dispatch(resetQuestions());\n                                window.location.href = packageJson.homepage;\n                                }\n                            }\n                            >\n                                Пройти тест заново\n                            </Button>\n                        </div>\n\n                </Box>\n            </Box>\n            <WrapperControlPanel \n            style={{ textAlign: 'center', display: 'flex', flexDirection: 'column', alignItems: 'center', padding: '15px', boxSizing: 'border-box'}}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ width: '300px' }}\n                    onClick={() => window.open('https://www.instagram.com/yanpalm/', '_blank')}\n                >\n                            Перейти в Инстаграм Яна\n                </Button>\n        </WrapperControlPanel>\n        </>\n        );\n}\n\n\nconst Bold = styled.strong`\n    font-weight: bold;\n`;\n\nconst Gradient1 = styled(Bold)`\n    background: -webkit-linear-gradient(45deg, #09009f, #00ff95 80%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-transform: uppercase;\n`;\n\nconst Gradient2 = styled(Bold)`\n    background: linear-gradient(to right, #ad1457, #4a148c);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-transform: uppercase;\n`;\n\nconst WrapperControlPanel = styled.div`\n    display: flex;\n    position: fixed;\n    bottom: 0;\n    justify-content: center;\n    padding: 1em 0;\n    min-height: 2em;\n    width: 100%;\n    z-index: 10000;\n    max-width: 935px;\n    background-color: #fff;\n    border-top: 2.5px solid #3c0068;\n    box-shadow: 0 -20px 8px -2px rgba(0, 0, 0, .1);\n`;\n","import React, { useEffect } from \"react\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport { loadBlocks } from \"src/store/blocks/actions\";\n\nexport default function LoadBlocks() {\n    const dispatch = useCustomDispatch();\n\n    useEffect(() => {\n        dispatch(loadBlocks());\n    }, [dispatch]);\n\n    return <></>;\n}\n","import React, { useEffect } from \"react\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport { loadRoles } from \"src/store/roles/actions\";\n\nexport default function LoadRoles() {\n    const dispatch = useCustomDispatch();\n\n    useEffect(() => {\n        dispatch(loadRoles());\n    }, [dispatch]);\n\n    return <></>;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Warning as WarningIcon } from \"@styled-icons/entypo/Warning\";\nimport { Loader5 as LoaderIcon } from \"@styled-icons/remix-fill/Loader5\";\n\ninterface IAlertProps {\n    type: \"preload\" | \"warning\";\n    text: string;\n}\n\nexport default function Alert(props: IAlertProps) {\n    return (\n        <Wrapper>\n            {props.type === \"preload\" && (\n                <>\n                    <LoaderStyledIcon size=\"28\" /> {props.text}\n                </>\n            )}\n            {props.type === \"warning\" && (\n                <>\n                    <WarningStyledIcon size=\"28\" /> {props.text}\n                </>\n            )}\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 50% 0;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 28px;\n    color: #4a4a4a;\n`;\n\nconst LoaderStyledIcon = styled(LoaderIcon)`\n    animation: rotate 2s linear infinite;\n    color: #2196f3;\n\n    @keyframes rotate {\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n`;\n\nconst WarningStyledIcon = styled(WarningIcon)`\n    color: #ff0000;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { blockState, mainGetStatusAsync, questionState, roleState } from \"src/store/rootSelector\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport LoadBlocks from \"src/components/Loading/LoadBlocks\";\nimport LoadRoles from \"src/components/Loading/LoadRoles\";\nimport Alert from \"src/components/Alert/Alert\";\n\nexport default function TechnicalCheckPage() {\n    const blocks = useCustomSelector(blockState);\n    const roles = useCustomSelector(roleState);\n    const questions = useCustomSelector(questionState);\n    const statusAsync = useCustomSelector(mainGetStatusAsync);\n\n    if (statusAsync.loadBlocks === loadStatus.notLoaded) {\n        return <LoadBlocks />;\n    }\n\n    if (statusAsync.loadRoles === loadStatus.notLoaded) {\n        return <LoadRoles />;\n    }\n\n    if (\n        statusAsync.loadBlocks === loadStatus.load ||\n        statusAsync.loadRoles === loadStatus.load\n    ) {\n        return <Alert type=\"preload\" text=\"Загрузка\" />;\n    }\n\n    if (blocks.size > 0 && roles.size > 0 && questions.size > 0) {\n        return (\n            <div>\n                <Title>Техническая проверка</Title>\n                <TableStyled>\n                    <thead>\n                        <tr>\n                            <td> </td>\n                            {roles.valueSeq().map((role: any) => (\n                                <td key={\"headRole\" + role.id}>{role.name}</td>\n                            ))}\n                        </tr>\n                    </thead>\n                </TableStyled>\n            </div>\n        );\n    }\n\n    return <Alert type=\"warning\" text=\"Не предвиденная ошибка\" />;\n}\n\nconst TableStyled = styled.table`\n    border: 1px solid #ccc;\n    & td {\n        border: 1px solid #ccc;\n        padding: 5px;\n        text-align: right;\n    }\n`;\n\nconst Title = styled.div`\n    font-size: 2em;\n    margin: 1em 0;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Switch, Route, Redirect, useLocation } from \"react-router-dom\";\nimport TestPage from \"src/components/TestPage/TestPage\";\nimport ResultPage from \"src/components/ResultPage/ResultPage\";\nimport TechnicalCheckPage from \"src/components/TechnicalCheckPage/TechnicalCheckPage\";\n\nfunction App() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return (\n        <Wrapper>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/block/1\" />\n                </Route>\n                <Route exact path=\"/block/:idBlock\" component={TestPage} />\n                <Route exact path=\"/test_result\" component={ResultPage} />\n                <Route exact path=\"/tc\" component={TechnicalCheckPage} />\n            </Switch>\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    max-width: 935px;\n    margin: 0 auto 3em auto;\n    @media (max-width: 768px) {\n        margin-bottom: 7em;\n    }\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { createHashHistory } from \"history\";\nimport { routerMiddleware, ConnectedRouter } from \"connected-react-router\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"src/store/rootReducer\";\nimport rootSaga from \"src/store/rootSaga\";\nimport services from \"src/services\";\nimport App from \"./App\";\n\nimport \"reset-css\";\nimport \"./index.css\";\n\nexport const history = createHashHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducer(history),\n    composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n);\nsagaMiddleware.run(rootSaga(services));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <App />\n            </ConnectedRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}