{"version":3,"sources":["components/ResultPage/resultPage.module.css","components/ResultPage/RoleBlock/roleBlock.module.css","components/Form/form.module.css","components/TestPage/testPage.module.css","store/loadStatus.ts","models/main.ts","store/main/types.ts","store/main/reducer.ts","store/blocks/types.ts","store/blocks/reducer.ts","store/roles/types.ts","store/roles/reducer.ts","text/questions.ts","store/questions/types.ts","store/questions/reducer.js","store/rootReducer.ts","store/blocks/actions.ts","store/main/actions.ts","store/blocks/saga.ts","store/roles/actions.ts","store/roles/saga.ts","store/rootSaga.ts","models/block.ts","models/role.ts","models/question.ts","services/index.ts","services/http.ts","services/api/apiBlock.ts","services/api/apiRole.ts","services/api/apiQuestion.ts","hooks/useCustomSelector.ts","store/rootSelector.ts","store/main/selectors.ts","components/TestPage/TestPage.tsx","hooks/useCustomDispatch.ts","store/questions/actions.ts","components/ResultPage/RoleBlock/RoleBlock.js","assets/Form/mark.svg","components/Form/Form.js","assets/Roles/collectivist.jpg","assets/Roles/dovodchik.jpg","assets/Roles/formirovatel.jpg","assets/Roles/ispolnitel.jpg","assets/Roles/mislitel.jpg","assets/Roles/ozenchik.jpg","text/roles.ts","assets/Roles/predsedatel.jpg","assets/Roles/razvedchik.jpg","assets/ResultPage/topStripe.svg","assets/ResultPage/rightStripe.svg","assets/ResultPage/belbinLabel.svg","components/ResultPage/ResultPage.tsx","App.tsx","index.tsx"],"names":["module","exports","loadStatus","initialMain","statusAsync","loadBlocks","notLoaded","loadRoles","loadQuestions","Main","Record","SET_STATUS_ASYNC","reducer","state","action","type","types","set","status","value","LOAD_BLOCKS","LOAD_BLOCKS_SUCCESS","Map","blocks","forEach","block","has","id","LOAD_ROLES","LOAD_ROLES_SUCCESS","roles","role","questions","title","questionLength","length","SET_VALUE","RESET_QUESTIONS","initialState","map","el","_","questionPart","newState","createRootReducer","combineReducers","main","loadBlocksSuccess","setStatusAsync","loadBlocksAsync","blockSaga","services","call","container","ApiBlock","put","loaded","errorServer","console","error","takeEvery","loadRolesSuccess","loadRolesAsync","roleSaga","ApiRole","Block","Role","name","characteristic","functionality","Question","text","bottle","Bottle","service","get","url","data","request","post","patch","delete","method","fetch","packageJson","body","JSON","stringify","undefined","then","response","ok","json","http","apiBlock","apiRole","apiQuestion","useCustomSelector","selector","arg","useSelector","propsFirstSelector","prop","questionState","createSelector","filter","result","sumValue","question","reduce","sum","sort","a","b","withStyles","instructionsText","fontSize","lineHeight","violet","color","fontWeight","instruction","display","justifyContent","alignItems","border","backgroundColor","borderRadius","padding","marginTop","overflow","maxHeight","transition","instructionOpened","paddingBottom","instructionClosed","props","useState","blockId","setBlockId","openInfo","setOpenInfo","instrcutionModal","setInstructionModal","classes","questionsRate","dispatch","useDispatch","useEffect","match","params","idBlock","location","currentQuestions","sumValueQuestions","acc","val","possibleMaximumValueQuestion","handleChangeQuestion","setValue","style","Typography","gutterBottom","align","className","sclasses","testBelbLabel","Bold","variant","component","PageName","Button","size","onClick","FixNameBlock","BoldLabel","index","WrapperQuestion","WrapperLabel","window","innerWidth","WrapperWrapperSlider","WrapperSlider","paddingRight","Slider","onChange","event","defaultValue","aria-labelledby","step","min","max","valueLabelDisplay","marks","disabled","WrapperControlPanel","marginRight","textAlign","WrapperTooltipInfo","TooltipInfo","open","ButtonInfo","IconButton","aria-label","InfoIconStyled","to","RouterLink","styled","div","strong","InfoIcon","label","RoleBlock","pLabel","roleClass","first","src","alt","parag","bold","haracteristic","weakness","Form","setName","surname","setSurname","email","setEmail","inputs","e","target","mark","image","dovodchik","formirovatel","mislitel","ozenchik","collectivist","ispolnitel","keys","ResultPage","updatedRoles","pageId","questionId","log","array","push","arrayLength","topRoles","i","rate","pop","category","Object","key","j","mainValue","supportedValue","smallest","sumAllValue","topStripe","styleClasses","rightStripe","table","firstLi","firstColumn","secondColumn","thirdColumn","bodyLi","Gradient2","Math","round","width","maxWidth","flexDirection","flexWrap","bottomPar","belbinLabel","BorderWrapper","App","pathname","useLocation","scrollTo","exact","path","render","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","rootSaga","all","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0652f53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"resultPage_main__B4vl2\",\"topStripe\":\"resultPage_topStripe__HsBwJ\",\"rightStripe\":\"resultPage_rightStripe__24WHS\",\"table\":\"resultPage_table__3Rmyr\",\"firstLi\":\"resultPage_firstLi__1wJ4c\",\"bodyLi\":\"resultPage_bodyLi__3y4K_\",\"firstColumn\":\"resultPage_firstColumn__3bHSY\",\"secondColumn\":\"resultPage_secondColumn__2IGJn\",\"thirdColumn\":\"resultPage_thirdColumn__3X-el\",\"bottomPar\":\"resultPage_bottomPar__3jG5-\",\"table_first\":\"resultPage_table_first__3rbbh\",\"belbinLabel\":\"resultPage_belbinLabel__3GHM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"roleBlock_main__s3926\",\"first\":\"roleBlock_first__1BNk8\",\"parag\":\"roleBlock_parag__1HrtS\",\"bold\":\"roleBlock_bold__86iyc\",\"text\":\"roleBlock_text__2x-lg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"form_main__1aGqo\",\"mark\":\"form_mark__2KHlt\",\"body\":\"form_body__1S8zj\",\"inputs\":\"form_inputs__1Mkpx\",\"component\":\"form_component__7HiRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageName\":\"testPage_PageName__1NO7A\",\"BoldLabel\":\"testPage_BoldLabel__n6lH6\",\"Question\":\"testPage_Question__aa-Ad\",\"testBelbLabel\":\"testPage_testBelbLabel__1ruLt\",\"instructionsText\":\"testPage_instructionsText__2EhlF\"};","export enum loadStatus {\n    notLoaded,\n    load,\n    loaded,\n    errorServer,\n}\n","import { Record } from \"immutable\";\nimport { loadStatus } from \"src/store/loadStatus\";\n\nexport interface IMain {\n    statusAsync: { loadBlocks: loadStatus; loadRoles: loadStatus; loadQuestions: loadStatus };\n}\n\nconst initialMain: IMain = {\n    statusAsync: {\n        loadBlocks: loadStatus.notLoaded,\n        loadRoles: loadStatus.notLoaded,\n        loadQuestions: loadStatus.notLoaded,\n    },\n};\n\nexport default class Main extends Record(initialMain) {}\n","export const SET_STATUS_ASYNC = \"SET_STATUS_ASYNC\";\n","import { ActionTypesInfer } from \"src/store/actionTypes\";\nimport Main from \"src/models/main\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\n\nexport type TStoreMain = Main;\n\nconst reducer = (state: TStoreMain = new Main(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.SET_STATUS_ASYNC:\n            return state.set(\"statusAsync\", { ...state.statusAsync, [action.status]: action.value });\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export const LOAD_BLOCKS = \"LOAD_BLOCKS\";\nexport const LOAD_BLOCKS_SUCCESS = \"LOAD_BLOCKS_SUCCESS\";\n","import { Map } from \"immutable\";\nimport { ActionTypesInfer } from \"src/store/actionTypes\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\nimport Block from \"src/models/block\";\n\nexport type TStoreBlock = Map<Block[\"id\"], Block>;\n\nconst reducer = (state: TStoreBlock = Map(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.LOAD_BLOCKS_SUCCESS:\n            action.blocks.forEach((block: Block) => {\n                if (!state.has(block.id)) {\n                    state = state.set(block.id, block);\n                }\n            });\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export const LOAD_ROLES = \"LOAD_ROLES\";\nexport const LOAD_ROLES_SUCCESS = \"LOAD_ROLES_SUCCESS\";\n","import { Map } from \"immutable\";\nimport { ActionTypesInfer } from \"src/store/actionTypes\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\nimport Role from \"src/models/role\";\n\nexport type TStoreRole = Map<Role[\"id\"], Role>;\n\nconst reducer = (state: TStoreRole = Map(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.LOAD_ROLES_SUCCESS:\n            action.roles.forEach((role: Role) => {\n                if (!state.has(role.id)) {\n                    state = state.set(role.id, role);\n                }\n            });\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","const questions = [\n    // первая часть\n    {\n        title: 'КАКОЙ ВКЛАД Я МОГУ ВНЕСТИ В РАБОТУ КОМАНДЫ?',\n        questions: [\n            'Я думаю, что способен быстро замечать новые возможности и извлекать из них выгоды.',\n\n            'Я могу успешно работать с самыми разными людьми.',\n\n            'Генерация идей — моё врожденное достоинство.',\n\n            'Моим достоинством является умение находить людей, способных принести пользу команде.',\n\n            'Моя способность доводить всё до конца во многом обеспечила мою профессиональную эффективность.',\n\n            'Я готов перенести временную непопулярность, если вижу, что мои действия принесут в конечном счете полезные результаты.',\n\n            'Я быстро выясняю, что сработает в данной ситуации, если в подобную ситуацию я уже попадал.',\n\n            'Личные заблуждения и предубеждения не мешают мне находить и доказывать преимущества альтернативных действий.'\n        ]\n    },\n    // вторая часть\n    {\n        title: 'МОИ НЕДОСТАТКИ, КОТОРЫЕ МОГУТ ПРОЯВИТЬСЯ В КОМАНДНОЙ РАБОТЕ:',\n        questions: [\n            'Я чувствую себя неуверенно на совещании, если отсутствуют четкая повестка дня и контроль за её соблюдением.',\n\n            'Я склонен быть слишком великодушным к людям, имеющим правильную точку зрения, но не высказывающим её открыто.',\n\n            'Я склонен слишком много говорить, когда в группе обсуждаются новые идеи.',\n\n            'Вследствие моей осмотрительности я не склонен быстро и с энтузиазмом присоединяться к мнению коллег.',\n\n            'Я иногда выгляжу авторитарным и нетерпимым, когда чувствую необходимость достичь чего-то.',\n\n            'Мне трудно повести людей за собой, поскольку я слишком подвержен влиянию атмосферы, царящей в группе.',\n\n            'Я слишком захвачен идеями, которые мне приходят в голову, и поэтому плохо слежу за тем, что происходит вокруг.',\n\n            'Мои коллеги находят, что я слишком много внимания уделяю деталям и чрезмерно беспокоюсь о том, что дела идут неправильно.'\n        ]\n    },\n    // третья часть\n    {\n        title: 'УЧАСТИЕ В СОВМЕСТНОМ ПРОЕКТЕ:',\n        questions: [\n            'Я умею влиять на людей, не оказывая на них давления.',\n\n            'Врожденная осмотрительность предохраняет меня от ошибок, возникающих из-за невнимательности.',\n\n            'Я готов оказать давление, чтобы совещание не превращалось в пустую трату времени и не терялась из виду основная цель обсуждения.',\n\n            'Можно рассчитывать на поступление от меня оригинальных предложений.',\n\n            'Я всегда готов поддержать любое предложение, если оно служит общим интересам.',\n\n            'Я энергично ищу среди новых идей и разработок свежайшие.',\n\n            'Я надеюсь, что моя способность выносить беспристрастные суждения признаётся всеми, кто меня знает.',\n\n            'На меня можно возложить обязанности следить за тем, чтобы наиболее существенная работа была организована должным образом.'\n        ]\n    },\n    // четвертая часть\n    {\n        title: 'Особенности моего стиля работы в команде:',\n        questions: [\n            'Я постоянно стараюсь лучше узнать своих коллег.',\n\n            'Я неохотно возражаю своим коллегам и не люблю сам быть в меньшинстве.',\n\n            'Я обычно нахожу вескую аргументацию против плохих предложений.',\n\n            'Я полагаю, что обладаю талантом быстро организовать исполнение одобренных планов.',\n\n            'Я обладаю способностью избегать очевидных решений и умею находить неожиданные.',\n\n            'Я стремлюсь добиться совершенства при исполнении любой роли в командной работе.',\n\n            'Я умею устанавливать контакты с внешним окружением команды.',\n\n            'Я способен воспринимать любые высказываемые мнения, но без колебаний подчиняюсь мнению большинства после принятия решения.'\n        ]\n    },\n    // пятая часть\n    {\n        title: 'Я получаю удовлетворение от работы, потому что:',\n        questions: [\n            'Мне доставляет удовольствие анализ ситуаций и взвешивание всех шансов.',\n\n            'Мне нравится находить практические решения проблем.',\n\n            'Мне нравиться сознавать, что я создаю хорошие рабочие взаимоотношения.',\n\n            'Я способен оказывать сильное влияние на принятие решений.',\n\n            'Я получаю возможность встретиться с людьми, способными предложить что-то новое для меня.',\n\n            'Я способен добиться согласия людей на реализацию необходимого курса действий.',\n\n            'Я чувствую себя в своей стихии, когда могу уделить задаче все мое внимание.',\n\n            'Мне нравится находить задачи, требующие напряжения воображения.'\n        ]\n    },\n    // шестая часть\n    {\n        title: 'Если мне неожиданно предложат решить трудную задачу за ограниченное время с незнакомыми людьми, то:',\n        questions: [\n            'Я бы почувствовал необходимость сначала в одиночестве обдумать пути выхода из тупика, прежде чем начать действовать.',\n\n            'Я был бы готов работать с человеком, указавшим наиболее позитивный подход, каковы бы ни были связанные с этим трудности.',\n\n            'Я бы попытался найти способ разбиения задачи на части в соответствии с тем, что лучше всего умеют делать отдельные члены команды.',\n\n            'Присущая мне обязательность помогла бы нам не отстать от графика.',\n\n            'Я надеюсь, мне бы удалось сохранить хладнокровие и способность логически мыслить.',\n\n            'Я бы упорно добивался достижения цели, несмотря ни на какие помехи.',\n\n            'Я был бы готов действовать силой положительного примера при появлении признаков отсутствия прогресса в командной работе.',\n\n            'Я бы организовал дискуссию, чтобы стимулировать выдвижение новых идей и придать начальный импульс командной работе.'\n        ]\n    },\n    // седьмая часть\n    {\n        title: 'ПРОБЛЕМЫ, С КОТОРЫМИ Я СТАЛКИВАЮСЬ, РАБОТАЯ В КОМАНДЕ:',\n        questions: [\n            'Я склонен проявлять нетерпимость по отношению к людям, мешающим, по моему мнению, прогрессу в делах группы.',\n\n            'Окружающие иногда критикуют меня за чрезмерный рационализм и неспособность к интуитивным решениям.',\n\n            'Мое стремление обеспечить условия, чтобы работа выполнялась правильно, может приводить к снижению темпов.',\n\n            'Я слишком быстро утрачиваю энтузиазм и стараюсь почерпнуть его у наиболее активных членов группы.',\n\n            'Я тяжел на подъем, если не имею ясных целей.',\n\n            'Мне иногда бывает очень трудно разобраться во встретившихся мне сложностях.',\n\n            'Я стесняюсь обратиться за помощью к другим, когда не могу что-либо сделать сам.',\n            \n            'Я испытываю затруднения при обосновании своей точки зрения, когда сталкиваюсь с серьезными возражениями.'\n        ]\n    },\n];\n\nconst questionLength = questions.length;\n\nexport { questions, questionLength };","export const SET_VALUE = \"SET_VALUE\";\nexport const RESET_QUESTIONS = \"RESET_QUESTIONS\";\n","import { questions } from '../../text/questions';\nimport * as types from \"./types\";\n\nconst initialState = {\n    ...questions.map((el) => el.questions.map(_ => 0))\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.SET_VALUE: \n            const questionPart = action.questionPart;\n            const id = action.id;\n            const newState = {\n                ...state\n            };\n            newState[questionPart][id] = action.value\n            return newState;\n        case types.RESET_QUESTIONS:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport main, { TStoreMain } from \"src/store/main/reducer\";\nimport blocks, { TStoreBlock } from \"src/store/blocks/reducer\";\nimport roles, { TStoreRole } from \"src/store/roles/reducer\";\nimport questions from \"src/store/questions/reducer\";\n\nexport interface IStore {\n    main: TStoreMain;\n    blocks: TStoreBlock;\n    roles: TStoreRole;\n}\n\nconst createRootReducer = () =>\n    combineReducers({\n        main,\n        blocks,\n        roles,\n        questions,\n    });\n\nexport default createRootReducer;\n","import * as types from \"./types\";\nimport Block from \"src/models/block\";\n\nexport const loadBlocks = () =>\n    ({\n        type: types.LOAD_BLOCKS,\n    } as const);\n\nexport const loadBlocksSuccess = (blocks: Block[]) =>\n    ({\n        type: types.LOAD_BLOCKS_SUCCESS,\n        blocks,\n    } as const);\n","import * as types from \"./types\";\nimport Main from \"src/models/main\";\nimport { loadStatus } from \"src/store/loadStatus\";\n\nexport const setStatusAsync = (status: keyof Main[\"statusAsync\"], value: loadStatus) =>\n    ({\n        type: types.SET_STATUS_ASYNC,\n        status,\n        value,\n    } as const);\n","import bottle from \"src/services\";\nimport { call, put, takeEvery } from \"@redux-saga/core/effects\";\nimport * as types from \"./types\";\nimport { loadBlocksSuccess } from \"./actions\";\nimport { setStatusAsync } from \"src/store/main/actions\";\nimport { loadStatus } from \"src/store/loadStatus\";\n\nfunction* loadBlocksAsync(services: typeof bottle) {\n    try {\n        const blocks = yield call(services.container.ApiBlock.loadBlocks);\n        yield put(loadBlocksSuccess(blocks));\n        yield put(setStatusAsync(\"loadBlocks\", loadStatus.loaded));\n    } catch (e) {\n        yield put(setStatusAsync(\"loadBlocks\", loadStatus.errorServer));\n        console.error(\"Server error while loading blocks!\");\n        console.error(e);\n    }\n}\n\nexport default function* blockSaga(services: typeof bottle) {\n    yield takeEvery(types.LOAD_BLOCKS, loadBlocksAsync, services);\n}\n","import * as types from \"./types\";\nimport Role from \"src/models/role\";\n\nexport const loadRoles = () =>\n    ({\n        type: types.LOAD_ROLES,\n    } as const);\n\nexport const loadRolesSuccess = (roles: Role[]) =>\n    ({\n        type: types.LOAD_ROLES_SUCCESS,\n        roles,\n    } as const);\n","import bottle from \"src/services\";\nimport { call, put, takeEvery } from \"@redux-saga/core/effects\";\nimport * as types from \"./types\";\nimport { loadRolesSuccess } from \"./actions\";\nimport { setStatusAsync } from \"src/store/main/actions\";\nimport { loadStatus } from \"src/store/loadStatus\";\n\nfunction* loadRolesAsync(services: typeof bottle) {\n    try {\n        const roles = yield call(services.container.ApiRole.loadRoles);\n        yield put(loadRolesSuccess(roles));\n        yield put(setStatusAsync(\"loadRoles\", loadStatus.loaded));\n    } catch (e) {\n        yield put(setStatusAsync(\"loadRoles\", loadStatus.errorServer));\n        console.error(\"Server error while loading roles!\");\n        console.error(e);\n    }\n}\n\nexport default function* roleSaga(services: typeof bottle) {\n    yield takeEvery(types.LOAD_ROLES, loadRolesAsync, services);\n}\n","import { all } from \"redux-saga/effects\";\nimport Bottle from \"bottlejs\";\nimport blockSaga from \"src/store/blocks/saga\";\nimport roleSaga from \"src/store/roles/saga\";\n\nexport default (services: Bottle) => {\n    return function* rootSaga() {\n        yield all([blockSaga(services), roleSaga(services)]);\n    };\n};\n","import { Record } from \"immutable\";\n\nexport interface IBlock {\n    id: number;\n    title: string;\n}\n\nexport const initialBlock: IBlock = {\n    id: 0,\n    title: \"\",\n};\n\nexport default class Block extends Record(initialBlock) {}\n","import { Record } from \"immutable\";\nimport { TStoreRole } from \"src/store/roles/reducer\";\n\nexport interface IRole {\n    id: number;\n    name: string;\n    characteristic: string;\n    functionality: string;\n    value: number;\n}\n\nexport const initialRole: IRole = {\n    id: 0,\n    name: \"\",\n    characteristic: \"\",\n    functionality: \"\",\n    value: 0,\n};\n\nexport const sortValue = (roles: Readonly<TStoreRole>) => {\n    return roles.sort((a: Role, b: Role) => {\n        if (a.value < b.value) return 1;\n        if (a.value > b.value) return -1;\n        return 0;\n    });\n};\n\nexport default class Role extends Record(initialRole) {}\n","import { Record } from \"immutable\";\n\nexport interface IQuestion {\n    id: number;\n    block: number;\n    role: number;\n    text: string;\n    value: number;\n}\n\nexport const initialQuestion: IQuestion = {\n    id: 0,\n    block: 0,\n    role: 0,\n    text: \"\",\n    value: 0,\n};\n\nexport default class Question extends Record(initialQuestion) {}\n","import Bottle from \"bottlejs\";\nimport Http from \"./http\";\nimport ApiBlock from \"./api/apiBlock\";\nimport ApiRole from \"./api/apiRole\";\nimport ApiQuestion from \"./api/apiQuestion\";\n\nlet bottle = new Bottle();\n\nexport default bottle;\nbottle.service(\"Http\", Http);\nbottle.service(\"ApiBlock\", ApiBlock, \"Http\");\nbottle.service(\"ApiRole\", ApiRole, \"Http\");\nbottle.service(\"ApiQuestion\", ApiQuestion, \"Http\");\n\ndeclare module \"bottlejs\" {\n    interface IContainer {\n        ApiBlock: ApiBlock;\n        ApiRole: ApiRole;\n        ApiQuestion: ApiQuestion;\n    }\n}\n","import { IHttp } from \"./IHttp\";\nimport * as packageJson from \"../../package.json\";\n\nexport default class Http implements IHttp {\n    get = (url: string, data?: object) => {\n        return this.request(\"GET\", url, data);\n    };\n\n    post = (url: string, data?: object) => {\n        return this.request(\"POST\", url, data);\n    };\n\n    put = (url: string, data?: object) => {\n        return this.request(\"PUT\", url, data);\n    };\n\n    patch = (url: string, data?: object) => {\n        return this.request(\"PATCH\", url, data);\n    };\n\n    delete = (url: string, data?: object) => {\n        return this.request(\"DELETE\", url, data);\n    };\n\n    request = (method: \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\" = \"GET\", url: string, data?: {}) => {\n        return fetch(packageJson.homepage + \"/api\" + url, {\n            method,\n            body: method !== \"GET\" ? JSON.stringify(data) : undefined,\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw response;\n            }\n        });\n    };\n}\n","import { IHttp } from \"src/services/IHttp\";\nimport Block from \"src/models/block\";\n\nexport interface IReadApiBlock {\n    id: number;\n    title: string;\n}\n\nexport default class ApiBlock {\n    constructor(private http: IHttp, private url: string = \"/blocks.json\") {}\n\n    loadBlocks = () => {\n        return this.http.get(this.url).then((response: IReadApiBlock[]) => {\n            return response.map((apiBlock) => new Block(apiBlock));\n        });\n    };\n}\n","import { IHttp } from \"src/services/IHttp\";\nimport Role from \"src/models/role\";\n\nexport interface IReadApiRole {\n    id: number;\n    name: string;\n    characteristic: string;\n    functionality: string;\n}\n\nexport default class ApiRole {\n    constructor(private http: IHttp, private url: string = \"/roles.json\") {}\n\n    loadRoles = () => {\n        return this.http.get(this.url).then((response: IReadApiRole[]) => {\n            return response.map((apiRole) => new Role(apiRole));\n        });\n    };\n}\n","import { IHttp } from \"src/services/IHttp\";\nimport Question from \"src/models/question\";\n\nexport interface IReadApiQuestion {\n    id: number;\n    block: number;\n    role: number;\n    text: string;\n}\n\nexport default class ApiQuestion {\n    constructor(private http: IHttp, private url: string = \"/questions.json\") {}\n\n    loadQuestions = () => {\n        return this.http.get(this.url).then((response: IReadApiQuestion[]) => {\n            return response.map((apiQuestion) => new Question(apiQuestion));\n        });\n    };\n}\n","import { useSelector } from \"react-redux\";\nimport { IStore } from \"src/store/rootReducer\";\nimport * as rootSelector from \"src/store/rootSelector\";\n\ntype InferSelectorFunctionsTypes<T> = T extends { [key: string]: infer U } ? U : never;\n\ntype InferredTypes = InferSelectorFunctionsTypes<typeof rootSelector>;\n\nexport default function useCustomSelector<T extends InferredTypes>(selector: T, arg?: number | string) {\n    //@ts-ignore\n    return useSelector((state: IStore) => selector(state, arg) as ReturnType<T>);\n}\n","import { createSelector } from \"reselect\";\nimport { Map } from \"immutable\";\nimport { IStore } from \"src/store/rootReducer\";\nimport { getStatusAsync } from \"src/store/main/selectors\";\nimport Role, { sortValue } from \"src/models/role\";\nimport { TStoreRole } from \"./roles/reducer\";\n\nconst propsFirstSelector = (_: IStore, prop: any) => prop;\n\nexport const mainState = (state: Readonly<IStore>) => state.main;\nexport const mainGetStatusAsync = createSelector(mainState, getStatusAsync);\n\nexport const blockState = (state: Readonly<IStore>) => state.blocks;\nexport const blockGetBlockById = createSelector(blockState, propsFirstSelector, (blocks, id) => {\n    return blocks.filter((block) => block.id === id);\n});\n\nexport const roleState = (state: any) => state.roles;\nexport const rolesGetRoleCalculatedValue = (state: any): TStoreRole => {\n    let result: TStoreRole = Map<Role[\"id\"], Role>();\n    state.roles.forEach((role: any) => {\n        let sumValue = state.questions\n            .filter((question: any) => question.role === role.id)\n            .reduce((sum: any, question: any) => sum + question.value, 0);\n\n        result = result.set(role.id, role.set(\"value\", sumValue));\n    });\n\n    return result;\n};\nexport const rolesGetRoleCalculatedValueSort = createSelector(rolesGetRoleCalculatedValue, sortValue);\n\nexport const questionState = (state: any) => state.questions;\nexport const questionsGetQuestionByBlock = createSelector(questionState, propsFirstSelector, (questions, id) => {\n    return questions.filter((question: any) => question.block === id);\n});\n","import { TStoreMain } from \"./reducer\";\n\nexport const getStatusAsync = (state: TStoreMain) => state.statusAsync;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport useCustomDispatch from 'src/hooks/useCustomDispatch';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { QuestionCircle as InfoIcon } from \"@styled-icons/bootstrap/QuestionCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport { questions, questionLength } from '../../text/questions';\nimport { questionState } from 'src/store/rootSelector';\nimport { setValue } from 'src/store/questions/actions';\n\nimport sclasses from './testPage.module.css';\n\nconst useStyles = {\n    instructionsText: {\n        fontSize: \"1em\",\n        lineHeight: 1.1,\n    },\n    violet: {\n        \"& .MuiSlider-markLabelActive\": {\n            color: '#25006e',\n            fontWeight: '700'\n        }\n    },\n    instruction: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        border: '2px solid #3c0068',\n        backgroundColor: '#fffacd',\n        borderRadius: '15px',\n        padding: '0',\n        marginTop: '5px',\n        overflow: 'hidden',\n        maxHeight: 'auto',\n        transition: 'max-height 2s, padding 0.5s, border 0.5s'\n    },\n    instructionOpened: {\n        maxHeight: 'auto',\n        border: '2px solid #3c0068',\n        padding: '10px',\n        paddingBottom: '8px',\n    },\n    instructionClosed: {\n       maxHeight: '0',\n       padding: '0',\n       border: 'none'\n    }\n};\n\nfunction TestPage( props: any ) {\n\n    const [ blockId, setBlockId ] = useState(0);\n    const [openInfo, setOpenInfo] = useState(false);\n    const [ instrcutionModal, setInstructionModal ] = useState(false);\n\n    const { classes } = props;\n\n    const questionsRate = useCustomSelector(questionState);\n    const dispatch = useCustomDispatch();\n\n    useEffect(() => {\n        const blockId = props.match.params.idBlock;\n        setBlockId(blockId - 1);\n    });\n\n    useEffect(() => {\n        setInstructionModal(false);\n    }, [props.location])\n\n    const currentQuestions = questions[blockId];\n    const sumValueQuestions = questionsRate[blockId].reduce((acc: any, val: any) => acc + val, 0);\n    const possibleMaximumValueQuestion = 10 - sumValueQuestions;\n\n    const handleChangeQuestion = (value: any, id: any) => {\n            dispatch(setValue(id, blockId, value)); \n    };\n\n        return (\n            <>\n            <div style={{ padding: '0.5em 1em 2.1em 1em'}}>\n                {blockId === 0 && \n                <Typography \n                    gutterBottom \n                    align={'center'} \n                    className={sclasses.testBelbLabel}\n                >\n                    Тест Белбина на вашу роль в команде\n                </Typography>}\n\n                {blockId === 0 &&\n                <Typography \n                    gutterBottom \n                    className={sclasses.instructionsText} \n                >\n                    <Bold>Инструкция.</Bold> В каждой из семи частей данного теста распределите 10 баллов между 8-мью утверждениями. Если вы согласны с каким-либо утверждением на все 100%, вы можете отдать ему все 10 баллов. По результатам прохождения теста будет определена ваша роль в команде.\n                </Typography>\n                }\n                <div style={\n                    blockId === 0 ?\n                    { display: 'flex', justifyContent: 'center'}\n                    :\n                    { display: 'flex', justifyContent: 'space-between' }\n                    }>\n                    <Typography \n                        gutterBottom \n                        variant={\"h6\"} \n                        component={\"h2\"} \n                        className={sclasses.PageName}\n                    >\n                        Часть { blockId + 1 } из { questionLength }\n                    </Typography>\n                    {blockId !== 0 && \n                    <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={() => setInstructionModal(!instrcutionModal)}\n                    >\n                        Инструкция\n                    </Button>}\n                </div>\n                <div className={\n                    instrcutionModal ? classes.instruction + ' ' + classes.instructionOpened\n                                    : classes.instruction + ' ' + classes.instructionClosed }> \n                    <Typography \n                        gutterBottom \n                        className={classes.instructionsText} \n                        style={{fontSize: '14px', lineHeight: '20px'}}\n                    >\n                        <Bold>Инструкция.</Bold> В каждой из семи частей данного теста распределите 10 баллов между 8-мью утверждениями. Если вы согласны с каким-либо утверждением на все 100%, вы можете отдать ему все 10 баллов. По результатам прохождения теста будет определена ваша роль в команде.\n                    </Typography>\n                </div>\n\n                <FixNameBlock>\n                    <Typography \n                        variant={\"h6\"} \n                        component={\"h2\"} \n                        className={sclasses.BoldLabel}\n                    >\n                        <Bold>{currentQuestions.title}</Bold>\n                    </Typography>\n                </FixNameBlock>\n\n                {currentQuestions.questions.map((question: any, index: any) => (\n                    <WrapperQuestion key={index}>\n                        <WrapperLabel>\n                            <Typography \n                                id={\"slider-question-\" + index} \n                                gutterBottom \n                                style={ index === 0 ? { \n                                    marginTop: window.innerWidth > 1024 ? '25px' : '15px'\n                                } : {}} \n                                className={sclasses.Question}\n                            >\n                                {index + 1}.  {question}\n                            </Typography>\n                        </WrapperLabel>\n                        <WrapperWrapperSlider>\n                            <WrapperSlider paddingRight={(questionsRate[blockId][index] + possibleMaximumValueQuestion) * 10}>\n                                <Slider\n                                    onChange={(event, value) =>\n                                        handleChangeQuestion(value, index)\n                                    }\n                                    value={questionsRate[blockId][index]}\n                                    defaultValue={0}\n                                    aria-labelledby=\"discrete-slider-restrict\"\n                                    step={1}\n                                    min={0}\n                                    max={\n                                        questionsRate[blockId][index] + possibleMaximumValueQuestion === 0\n                                            ? 1\n                                            : questionsRate[blockId][index] + possibleMaximumValueQuestion\n                                    }\n                                    valueLabelDisplay=\"auto\"\n                                    marks={marks}\n                                    className={classes.violet}\n                                    disabled={questionsRate[blockId][index] + possibleMaximumValueQuestion === 0}\n                                />\n                            </WrapperSlider>\n                        </WrapperWrapperSlider>\n                    </WrapperQuestion>\n                ))}\n            </div>\n            <WrapperControlPanel>\n            {possibleMaximumValueQuestion !== 0 && \n            <>\n                <p style={{ marginRight: '2%', textAlign: 'center'}}> \n                    {possibleMaximumValueQuestion === 1 ? 'Остался ' : 'Осталось '}\n                    {possibleMaximumValueQuestion} \n                    {possibleMaximumValueQuestion >= 5 ? ' баллов ' :\n                    (possibleMaximumValueQuestion > 1 ? ' балла ' : ' балл ') } \n                    из 10 \n                </p> \n                <WrapperTooltipInfo>\n                    <TooltipInfo open={openInfo}>\n                        <Typography>\n                            Нужно распределить <b>{possibleMaximumValueQuestion}</b> из 10 баллов для продолжение\n                            теста\n                        </Typography>\n                        <ButtonInfo onClick={() => setOpenInfo(false)}>Понятно</ButtonInfo>\n                    </TooltipInfo>\n                    <IconButton aria-label=\"info\" onClick={() => setOpenInfo(true)}>\n                        <InfoIconStyled size=\"20\" />\n                    </IconButton>\n                </WrapperTooltipInfo>\n            </>}\n\n                {blockId + 1 < questionLength && (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        to={\"/block/\" + (blockId + 2)}\n                        component={RouterLink}\n                        disabled={sumValueQuestions < 10}\n                    >\n                        Далее\n                    </Button>\n                )}\n\n                {blockId + 1 === questionLength && (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        to=\"/test_result\"\n                        component={RouterLink}\n                        disabled={sumValueQuestions < 10}\n                    >\n                        Результат\n                    </Button>\n                )}\n            </WrapperControlPanel>\n            </>\n        );\n}\n\nexport default withStyles(useStyles)(TestPage);\n\n\nconst WrapperQuestion = styled.div`\n`;\n\nconst WrapperWrapperSlider = styled.div`\n    padding: 0 2em;\n`;\n\nconst WrapperSlider = styled.div`\n    width: ${(props: { paddingRight: number }) => (props.paddingRight > 0 ? props.paddingRight : 10)}%;\n    display: flex;\n    user-select: none;\n`;\n\nconst WrapperLabel = styled.div`\n    user-select: none;\n`;\n\nconst Bold = styled.strong`\n    font-weight: bold;\n`;\n\nconst FixNameBlock = styled.div`\n    position: sticky;\n    top: 0;\n    font-size: 1.25em;\n    padding: 2px 0;\n    min-height: 2em;\n    z-index: 10000;\n    background-color: #fff;\n    border-bottom: 2px solid #3c0068;\n`;\n\nconst WrapperControlPanel = styled.div`\n    display: flex;\n    flex-direction: row;\n    position: fixed;\n    bottom: 0;\n    justify-content: center;\n    align-items: center;\n    padding: 1em 0;\n    width: 100%;\n    z-index: 10000;\n    max-width: 1400px;\n    background-color: #fff;\n    border-top: 1px solid #eee;\n\n    @media screen and (max-width: 400px) {\n        padding: 7px;\n    }\n`;\n\nconst InfoIconStyled = styled(InfoIcon)`\n    color: #3f51b5;\n`;\n\nconst WrapperTooltipInfo = styled.div`\n    position: relative;\n    display: inline-block;\n`;\n\nconst TooltipInfo = styled.div`\n    visibility: ${(props: { open: boolean }) => (props.open ? \"visible\" : \"hidden\")};\n    width: 240px;\n    background-color: #1c1c1c;\n    color: #ccc;\n    text-align: center;\n    padding: 5px;\n    border-radius: 3px;\n\n    bottom: 100%;\n    left: 50%;\n    margin-left: -120px;\n    position: absolute;\n    z-index: 1;\n`;\n\nconst ButtonInfo = styled.div`\n    cursor: pointer;\n    background-color: #fff;\n    color: #242424;\n    padding: 0.5em;\n    margin: 0.5em;\n    border: 1px solid #ccc;\n    border-radius: 1px;\n`;\n\nconst marks = [\n    { value: 0, label: \"0\" },\n    { value: 1, label: \"1\" },\n    { value: 2, label: \"2\" },\n    { value: 3, label: \"3\" },\n    { value: 4, label: \"4\" },\n    { value: 5, label: \"5\" },\n    { value: 6, label: \"6\" },\n    { value: 7, label: \"7\" },\n    { value: 8, label: \"8\" },\n    { value: 9, label: \"9\" },\n    { value: 10, label: \"10\" },\n];\n","import { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { allActionsTypes } from \"src/store/actionTypes\";\n\nexport default function useCustomDispatch() {\n    return useDispatch<Dispatch<allActionsTypes>>();\n}\n","import * as types from \"./types\";\n\nexport const setValue = (id: number, questionPart: number, value: number) =>\n    ({\n        type: types.SET_VALUE,\n        id,\n        questionPart,\n        value,\n    } as const);\n\nexport const resetQuestions = () => ({\n    type: types.RESET_QUESTIONS\n} as const);\n","import React from 'react';\r\n\r\nimport classes from './roleBlock.module.css';\r\n\r\nconst RoleBlock = (props) => {\r\n\r\n    let pLabel;\r\n    if (props.roleClass === 'first') {\r\n        pLabel = 'Преобладающая роль';\r\n    } else if (props.roleClass === 'second') {\r\n        pLabel = 'Второстепенная роль';\r\n    } else {\r\n        pLabel = 'Слабая роль';\r\n    }\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <div className={classes.first}>\r\n                <img\r\n                    src={props.src}\r\n                    alt=\"\"\r\n                />\r\n                <p>{pLabel}</p>\r\n                <h3>{props.name}</h3>\r\n            </div>\r\n            <div className={classes.parag}>\r\n                <p className={classes.bold}>Сильные стороны:</p>\r\n                <p className={classes.text}>\r\n                    {props.haracteristic}\r\n                </p>\r\n                <p className={classes.bold}>Слабые стороны:</p>\r\n                <p className={classes.text}>\r\n                    {props.weakness}\r\n                </p>\r\n                <p className={classes.bold}>Вклад в команду:</p>\r\n                <p className={classes.text}>\r\n                    {props.functionality}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoleBlock;","export default __webpack_public_path__ + \"static/media/mark.b8ce22f0.svg\";","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './form.module.css';\r\nimport mark from '../../assets/Form/mark.svg';\r\n\r\nconst Form = (props) => {\r\n\r\n    const [ name, setName ] = useState('');\r\n    const [ surname, setSurname ] = useState('');\r\n    const [ email, setEmail ] = useState('');\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <div className={classes.body}>\r\n                <h3>\r\n                    Анкета героя Белбина\r\n                </h3>\r\n                <div className={classes.inputs}>\r\n                    <div className={classes.component}>\r\n                        <label>Имя</label>\r\n                        <input \r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.component}>\r\n                        <label>Фамилия</label>\r\n                        <input \r\n                            value={surname}\r\n                            onChange={(e) => setSurname(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.component}>\r\n                        <label>Почта</label>\r\n                        <input \r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <button>\r\n                    Получить чек-лист\r\n                </button>\r\n            </div>\r\n            <img  \r\n                src={mark}\r\n                alt=\"\"\r\n                className={classes.mark}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/collectivist.bc88e536.jpg\";","export default __webpack_public_path__ + \"static/media/dovodchik.bcff3b9d.jpg\";","export default __webpack_public_path__ + \"static/media/formirovatel.d4516b6d.jpg\";","export default __webpack_public_path__ + \"static/media/ispolnitel.cd00c45e.jpg\";","export default __webpack_public_path__ + \"static/media/mislitel.8be4c246.jpg\";","export default __webpack_public_path__ + \"static/media/ozenchik.a35bb5e8.jpg\";","// images\nimport collectivist from '../assets/Roles/collectivist.jpg';\nimport dovodchik from '../assets/Roles/dovodchik.jpg';\nimport formirovatel from '../assets/Roles/formirovatel.jpg';\nimport ispolnitel from '../assets/Roles/ispolnitel.jpg';\nimport mislitel from '../assets/Roles/mislitel.jpg';\nimport ozenchik from '../assets/Roles/ozenchik.jpg';\nimport predsedatel from '../assets/Roles/predsedatel.jpg';\nimport razvedchik from '../assets/Roles/razvedchik.jpg';\n\nconst roles: any = {\n\n    'Доводчик': {\n        haracteristic: 'Сознательный. Беспокойный.',\n\n        functionality: 'Ищет ошибки, недоработки. Концентрируется и ориентирует других на установленные сроки.',\n\n        weakness: 'Имеет тенденцию напрасно беспокоиться. Не любит делегировать полномочия.',\n\n        image: dovodchik\n\n    },\n\n    'Председатель': {\n\n        haracteristic: 'Зрелый. Уверенный в себе, доверяющий.',\n\n        functionality: 'Разъясняет цели и расставляет приоритеты. Мотивирует коллег, повышает в должности.',\n\n        weakness: 'Не очень интеллигентен, личность не высоко творческая.',\n\n        image: predsedatel\n\n    },\n\n    'Формирователь': {\n\n        haracteristic: 'Очень сильная личность. Общителен, динамичен.',\n\n        functionality: 'Способен работать в режиме высокого напряжения, преодолeвать препятствия для достижения цели.',\n\n        weakness: 'Легко поддается на провокацию.',\n\n        image: formirovatel\n\n    },\n\n    'Мыслитель': {\n\n        haracteristic: 'Умный. С хорошим воображением. Неординарный.',\n\n        functionality: 'Предлагает оригинальные идеи. Решает сложные вопросы.',\n\n        weakness: 'Слабо контактирует и плохо управляет обыкновенными членами команды.',\n\n        image: mislitel\n    },\n\n    'Разведчик': {\n\n        haracteristic: 'Экстраверт. Энтузиаст. Любопытен. Общителен.',\n\n        functionality: 'Изучает новые возможности. Развивает контакты. Переговорщик.',\n\n        weakness: 'Теряет интерес по мере угасания первоначального энтузиазма',\n\n        image: razvedchik\n    },\n    \"Оценщик\": {\n\n        haracteristic: 'Трезво оценивает обстановку. Интеллигентен. Скуп на эмоции. Объективен.',\n\n        functionality: 'Рассматривает все варианты. Анализирует. Старается предвидеть результат.',\n\n        weakness: 'Недостает способности вдохновить остальной коллектив.',\n\n        image: ozenchik\n\n    },\n    \"Коллективист\": {\n\n        haracteristic: 'Ориентирован на общество. Мягок, уживчив, восприимчив.',\n\n        functionality: 'Слушает. Строит, улаживает разногласия. Работает с трудными людьми.',\n\n        weakness: 'Теряется в острых ситуациях',\n\n        image: collectivist\n\n    },\n    \"Исполнитель\": {\n\n        haracteristic: 'Консервативен. Дисциплинирован. Надежен.',\n\n        functionality: 'Организует. Претворяет в жизнь идеи и планы.',\n\n        weakness: 'Негибок. Медленно реагирует на новые возможности.',\n\n        image: ispolnitel\n\n    }\n};\n\n// первая цифра - номер страницы( начинаються с 0),\n// вотрая цира - номер вопроса ( начинаються с 0)\nconst keys: any = {\n    'Доводчик': [\n        '06',\n        '10',\n        '27',\n        '33',\n        '41',\n        '55',\n        '64'\n    ],\n    'Председатель': [\n        '03',\n        '11',\n        '20',\n        '37',\n        '45',\n        '52',\n        '66'\n    ],\n    'Формирователь': [\n        '05',\n        '14',\n        '22',\n        '31',\n        '43',\n        '56',\n        '60'\n    ],\n    'Мыслитель': [\n        '02',\n        '16',\n        '23',\n        '34',\n        '47',\n        '50',\n        '65'\n    ],\n    'Разведчик': [\n        '00',\n        '12',\n        '25',\n        '36',\n        '44',\n        '57',\n        '63'\n    ],\n    'Оценщик': [\n        '07',\n        '13',\n        '26',\n        '32',\n        '40',\n        '54',\n        '61'\n    ],\n    'Коллективист': [\n        '01',\n        '15',\n        '24',\n        '30',\n        '42',\n        '51',\n        '67'\n    ],\n    'Исполнитель': [\n        '04',\n        '17',\n        '21',\n        '35',\n        '46',\n        '53',\n        '62'\n    ]\n}\n\nexport { roles, keys };","export default __webpack_public_path__ + \"static/media/predsedatel.79dd26bd.jpg\";","export default __webpack_public_path__ + \"static/media/razvedchik.37ae9f02.jpg\";","export default __webpack_public_path__ + \"static/media/topStripe.5945b652.svg\";","export default __webpack_public_path__ + \"static/media/rightStripe.51fdf77b.svg\";","export default __webpack_public_path__ + \"static/media/belbinLabel.6b926b61.svg\";","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport RoleBlock from './RoleBlock/RoleBlock';\nimport Form from '../Form/Form';\n\nimport styled from \"styled-components\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { questionState } from 'src/store/rootSelector';\n\nimport { roles, keys } from '../../text/roles';\n\n// images\nimport topStripe from '../../assets/ResultPage/topStripe.svg';\nimport rightStripe from '../../assets/ResultPage/rightStripe.svg';\nimport belbinLabel from '../../assets/ResultPage/belbinLabel.svg';\nimport styleClasses from './resultPage.module.css';\n\nexport default function ResultPage() {\n\n    const questionsRate = useCustomSelector(questionState);\n\n    // формируем сколько очков набрала каждая категория\n    let updatedRoles: any = {\n        ...roles\n    };\n    for(const role in updatedRoles) {\n       updatedRoles[role] = keys[role].reduce((acc: any, val: any) => {\n        const pageId = val[0];\n        const questionId = val[1];\n            return acc + questionsRate[pageId][questionId];\n       }, 0);\n    };\n    console.log(updatedRoles);\n\n    // ищем топ всех ролей\n    let array = [];\n    for( const role in updatedRoles ) {\n        array.push(updatedRoles[role]);\n    }\n    array = array.sort((a, b) => a - b);\n\n    const arrayLength = array.length;\n\n    let topRoles = [];\n    for (let i = 0; i < arrayLength; i++) {\n        const rate: any = array.pop();\n        const category = Object.keys(updatedRoles).filter(function(key) {return updatedRoles[key] === rate});\n        for (let j = 0 ; j <= category.length; j++ ) {\n            topRoles.push({\n                category: category[j],\n                rate: rate\n            });\n            updatedRoles[category[i]] = -100;\n            array = array.filter(el => el !== rate);\n        }\n    }\n    for(const role in topRoles) {\n        if (topRoles[role].category === undefined || topRoles[role].rate === undefined ) {\n          delete topRoles[role];\n        }\n    }\n\n    const sumAllValue = topRoles.reduce((sum: any, role: any) => sum + role.rate, 0);\n    if (sumAllValue < 70) {\n        return (\n            <Redirect to=\"/\" />\n        );  \n    }\n\n    // main value\n    let mainValue: any;\n    for(let value in topRoles) {\n        if ( topRoles[value].category !== undefined && topRoles[value].rate !== undefined && value !== undefined) {\n            mainValue = topRoles[value];\n            break;\n        }\n    }\n    // supported value\n    let supportedValue: any;\n    if (mainValue !== undefined) {\n        for(let value in topRoles) {\n            if ( topRoles[value].category !== undefined && topRoles[value].rate !== undefined && value !== undefined && topRoles[value].category !== mainValue.category) {\n                supportedValue = topRoles[value];\n                break;\n            }\n        }\n    }\n    // the smallest value\n    let smallest : any;\n    let exsmallest : any;\n    for(let value in topRoles) {\n        if ( topRoles[value].category !== undefined && topRoles[value].rate !== undefined && value !== undefined) {\n            exsmallest = smallest;\n            smallest = topRoles[value];\n        }\n    }\n\n\n        return (\n            <>\n            {/* images bg */}\n            <img \n                src={topStripe}\n                alt=\"\"\n                className={styleClasses.topStripe}\n            />\n            <img \n                src={rightStripe}\n                alt=\"\"\n                className={styleClasses.rightStripe}\n            />\n\n            <div className={styleClasses.main}>\n                <h1>\n                    Результат теста\n                </h1>\n                <h4>\n                    Таблица с процентным соотношением ролей\n                </h4>\n                <div className={styleClasses.table}> \n                    <ul>\n                        <li className={styleClasses.firstLi}>\n                            <div className={styleClasses.firstColumn}>\n                                <span style={{\n                                    fontWeight: 600\n                                }}>\n                                    Роль\n                                </span>\n                            </div>\n                            <div className={styleClasses.secondColumn}>\n                                <span style={{\n                                    fontWeight: 600\n                                }}>\n                                    Проценты\n                                </span>\n                            </div>\n                            <div className={styleClasses.thirdColumn}>\n                                <span style={{\n                                    fontWeight: 600\n                                }}>\n                                    Баллы\n                                </span>\n                            </div>\n                        </li>\n                        {topRoles.map((role, index) => (\n                                <li key={\"role\" + index} className={styleClasses.bodyLi}>\n                                    <div className={styleClasses.firstColumn}>\n                                        {role.category === mainValue.category &&\n                                        (<Gradient2>\n                                            <p>{role.category}</p>\n                                        </Gradient2>)\n                                        }\n                                        {role.category === supportedValue.category &&\n                                        (<Gradient2>\n                                            <p>{role.category}</p>\n                                        </Gradient2>)\n                                        }\n                                        {role.category !== supportedValue.category && role.category !== mainValue.category && \n                                        <p>{role.category}</p>\n                                        }\n                                    </div>\n                                    <div className={styleClasses.secondColumn}>\n                                        {role.category === mainValue.category &&\n                                        <Gradient2>\n                                            {Math.round((role.rate * 100) / sumAllValue)}\n                                        </Gradient2>\n                                        }\n                                        {role.category === supportedValue.category &&\n                                        <Gradient2>\n                                            {Math.round((role.rate * 100) / sumAllValue)}\n                                        </Gradient2>\n                                        }\n                                        {role.category !== supportedValue.category && role.category !== mainValue.category &&\n                                        Math.round((role.rate * 100) / sumAllValue)\n                                        }\n                                    </div>\n                                    <div className={styleClasses.thirdColumn}>\n                                        {role.category === mainValue.category &&\n                                        <Gradient2>\n                                            {role.rate}\n                                        </Gradient2>}\n                                        {role.category === supportedValue.category &&\n                                        <Gradient2>\n                                            {role.rate}\n                                        </Gradient2>}\n                                        {role.category !== supportedValue.category && role.category !== mainValue.category &&\n                                        role.rate}\n                                    </div>\n                                </li>\n                            ))}\n                    </ul>\n                </div>\n                <h2 style={{\n                    marginTop: '80px'\n                }}>\n                    Ваши сильные роли\n                </h2>\n                <div style={{\n                    width: '90%',\n                    maxWidth: '1800px',\n                    display: 'flex',\n                    alignItems: 'flex-start',\n                    justifyContent: window.innerWidth > 900 ? 'space-between' : 'center',\n                    flexDirection: 'row',\n                    flexWrap: 'wrap',\n                }}>\n                    <RoleBlock \n                        src={roles[mainValue.category].image}\n                        roleClass={'first'}\n                        name={mainValue.category}\n                        haracteristic={roles[mainValue.category].haracteristic}\n                        weakness={roles[mainValue.category].weakness}\n                        functionality={roles[mainValue.category].functionality}\n                    />\n                    <RoleBlock \n                        src={roles[supportedValue.category].image}\n                        roleClass={'second'}\n                        name={supportedValue.category}\n                        haracteristic={roles[supportedValue.category].haracteristic}\n                        weakness={roles[supportedValue.category].weakness}\n                        functionality={roles[supportedValue.category].functionality}\n                    />\n                </div>\n                <h2 style={{\n                    marginTop: '80px'\n                }}>\n                    Ваша слабая роль\n                </h2>\n                <div style={{\n                    width: '90%',\n                    maxWidth: '1800px',\n                    display: 'flex',\n                    alignItems: 'flex-start',\n                    justifyContent: 'flex-start',\n                    flexDirection: 'row'\n                }}>\n                    <RoleBlock \n                        src={roles[smallest.category].image}\n                        roleClass={'third'}\n                        name={smallest.category}\n                        haracteristic={roles[smallest.category].haracteristic}\n                        weakness={roles[smallest.category].weakness}\n                        functionality={roles[smallest.category].functionality}\n                    />\n                </div>\n                <p className={styleClasses.bottomPar}>\n                    {`Мы подготовили для тебя развернутое описание каждой роли!\\n\n                    Чтобы получить наш чек-лист, тебе нужно\\n\n                    оставить пару строк о себе`}\n                </p>\n                <div \n                style={{\n                    width: '100%',\n                    marginTop: '40px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }}>\n                    <Form />\n                </div>\n                <div className={styleClasses.belbinLabel}>\n                    <img \n                        style={{width:'100%', maxWidth: '1900px'}}\n                        src={belbinLabel}\n                        alt=\"\"\n                    />\n                </div>\n            </div>\n        </>\n        );\n}\n\n\nconst Bold = styled.strong`\n    font-weight: bold;\n`;\n\n// const Gradient1 = styled(Bold)`\n//     background: -webkit-linear-gradient(45deg, #09009f, #00ff95 80%);\n//     -webkit-background-clip: text;\n//     -webkit-text-fill-color: transparent;\n//     text-transform: uppercase;\n// `;\n\nconst Gradient2 = styled(Bold)`\n    background: linear-gradient(to right, #ad1457, #4a148c);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-transform: uppercase;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Switch, Route, Redirect, useLocation } from \"react-router-dom\";\nimport TestPage from \"src/components/TestPage/TestPage\";\nimport ResultPage from \"src/components/ResultPage/ResultPage\";\n\nfunction App(props: any) {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return (\n            <Switch>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/block/1\" />\n                </Route>\n                <Route exact path=\"/block/:idBlock\" render={(props: any) => \n                    <BorderWrapper>\n                        <TestPage {...props} />\n                    </BorderWrapper>\n                }/>\n                <Route exact path=\"/test_result\" render={(props: any) => \n                    <ResultPage {...props} />\n                }/>\n            </Switch>\n    );\n}\n\nconst BorderWrapper = styled.div`\n    max-width: 1400px;\n    margin: 0 auto;\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"src/store/rootReducer\";\nimport rootSaga from \"src/store/rootSaga\";\nimport services from \"src/services\";\nimport App from \"./App\";\n\nimport \"reset-css\";\nimport \"./index.css\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducer(),\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga(services));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}